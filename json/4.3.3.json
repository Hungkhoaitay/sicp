[{"id":"/sicpjs/4.3.3","tag":"TITLE","body":"4.3.3  \n    Implementing the\n    \n      \n      amb\n    \n    Evaluator"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    The evaluation of an ordinary\n    JavaScript program\n    may return a value, may never terminate, or may signal an error.\n    In nondeterministic\n    JavaScript\n    the evaluation of\n    a program\n    may in addition result in the discovery of\n    a dead end, in which case evaluation must backtrack to a previous choice\n    point.  The interpretation of nondeterministic\n    JavaScript\n    is complicated by this extra case.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    We will construct the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator for\n    nondeterministic\n    JavaScript\n    by modifying the\n    \n    analyzing evaluator of\n    section ","tag":"#text"},{"tag":"REF","body":"4.1.7","href":"/sicpjs/4.1.7"},{"body":".","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/4.3.3#footnote-1"},{"body":" As in the analyzing evaluator, evaluation of\n    a component\n    is accomplished by calling an \n    \n    execution\n    function\n    produced by analysis of that\n    component.\n    The difference between the interpretation of ordinary\n    JavaScript\n    and the interpretation of nondeterministic\n    JavaScript\n    will be entirely\n    in the execution\n    functions.","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h1","child":[{"body":"\n      Execution\n      functions\n      and continuations\n    ","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    Recall that the\n    \n    execution\n    functions\n    for the ordinary evaluator take one argument: the environment of execution.\n    In contrast, the execution\n    functions\n    in the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator take three arguments:\n    the environment, and two\n    functions\n    called\n    ","tag":"#text"},{"tag":"EM","child":[{"body":"continuation functions","tag":"#text"}]},{"body":".\n    The evaluation of\n    a component\n    will finish by calling one of these two\n    continuations: If the evaluation results in a value, the \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"success continuation","tag":"#text"}]},{"body":" is called with that value; if the evaluation\n    results in the discovery of a dead end, the \n    ","tag":"#text"},{"tag":"EM","child":[{"body":"failure continuation","tag":"#text"}]},{"body":" is called.  Constructing and calling\n    appropriate continuations is the mechanism by which the nondeterministic\n    evaluator implements backtracking.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n    It is the job of the success continuation to receive a value and proceed\n    with the computation.  Along with that value, the success continuation is\n    passed another failure continuation, which is to be called subsequently if\n    the use of that value leads to a dead end.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p5","child":[{"body":"\n    It is the job of the failure continuation to try another branch of the\n    nondeterministic process.  The essence of the nondeterministic\n    language is in the fact that\n    components\n    may represent choices among\n    alternatives.  The evaluation of such\n    a component\n    must proceed with\n    one of the indicated alternative choices, even though it is not known\n    in advance which choices will lead to acceptable results.  To deal\n    with this, the evaluator picks one of the alternatives and passes this\n    value to the success continuation.  Together with this value, the\n    evaluator constructs and passes along a failure continuation that can\n    be called later to choose a different alternative.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n    A failure is triggered during evaluation (that is, a failure\n    continuation is called) when a user program explicitly rejects the\n    current line of attack (for example, a call to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"require"},{"body":" may result in execution of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb()"},{"body":",\n    an expression that always\n    fails—see section ","tag":"#text"},{"tag":"REF","body":"4.3.1","href":"/sicpjs/4.3.1"},{"body":").  The failure\n    continuation in hand at that point will cause the most recent choice point\n    to choose another alternative.  If there are no more alternatives to be\n    considered at that choice point, a failure at an earlier choice point\n    is triggered, and so on.  Failure continuations are also invoked by\n    the driver loop in response to a\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n    request, to find another value of the\n    program.","tag":"#text"}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    In addition, if a side-effect operation (such as assignment to a\n    variable) occurs on a branch of the process resulting from a choice,\n    it may be necessary, when the process finds a dead end, to undo the\n    side effect before making a new choice.  This is accomplished by\n    having the side-effect operation produce a failure continuation that\n    undoes the side effect and propagates the failure.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n    In summary, failure continuations are constructed by\n    ","tag":"#text"},{"tag":"UL","child":[{"tag":"LI","child":[{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" expressions—to provide a\n\tmechanism to make alternative choices if the current choice made by the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" expression leads to a dead end;\n      ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\tthe top-level driver—to provide a mechanism to report failure\n\twhen the choices are exhausted;\n      ","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\tassignments—to intercept failures and undo assignments\n\tduring backtracking.\n      ","tag":"#text"}]}]}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    Failures are initiated only when a dead end is encountered. This occurs\n    ","tag":"#text"},{"tag":"UL","child":[{"tag":"LI","child":[{"body":"\n\tif the user program executes\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb()"},{"body":";","tag":"#text"}]},{"tag":"LI","child":[{"body":"\n\tif the user types\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n\tat the top-level driver.\n      ","tag":"#text"}]}]}]},{"tag":"TEXT","id":"#p10","child":[{"body":"\n    Failure continuations are also called during processing of a failure:\n    ","tag":"#text"},{"tag":"UL","child":[{"tag":"LI","child":[{"body":"When the failure continuation created by an assignment finishes\n      undoing a side effect, it calls the failure continuation it intercepted,\n      in order to propagate the failure back to the choice point that\n      led to this assignment or to the top level.\n\n      ","tag":"#text"}]},{"tag":"LI","child":[{"body":"When the failure continuation for an ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":"\n      runs out of choices, it calls the failure continuation that was originally\n      given to the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":", in order to propagate the\n      failure back to the previous choice point or to the top level.\n      ","tag":"#text"}]}]}]},{"tag":"SUBHEADING","id":"#h2","child":[{"body":"Structure of the evaluator","tag":"#text"}]},{"tag":"TEXT","id":"#p11","child":[{"body":"\n    The syntax- and data-representation\n    functions\n    for the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator, and also the basic\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze"},{"body":"function,\n    are identical to those in the evaluator of\n    section ","tag":"#text"},{"tag":"REF","body":"4.1.7","href":"/sicpjs/4.1.7"},{"body":", except for the fact\n    that we need additional syntax\n    functions\n    to recognize\n    \n\tthe ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" syntactic form:\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":186,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQGZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMaAJlzFy1OqCr0A+hQCGAc3kBTACZSANpIoAKMmwAOdJSQoAaUBQAWSmQoCUoAN7ZQr0EyUUiTEhOn7ZKiZdAyMTBwAyCNBrWRUQ1kMSYwoHAF4Mi2tbeQBubABfYVJKWl9JDSoKJSZZdQSklIdnN3dPb3LpOUVVSvodPUSws1AAIk1q2vVRu3yikVLxCZq6qQA3OqIlBuHm1pc3Dy8fGKU47TkqesHG8NnC4tEy0FZZAGsbZantDfUt5oOriOHVAmn62nGVRW03Mv3+c0ei06UhIslY2xuuycgLax2R3WUajBA1CyRM5lGqPRMwR2AWYl8rw+KLR23oAE9WAAjGjqAGtYEnYkQqlKUbmDnc3n3Ip0koM0CSnnqKQ0Ags9E7MmpbEC9onWLxS7XUlNGWIhUVWT0ehUeQkdEmLVNXWHfX4hSEvokobainW232x0UGkPenPAN2h0pKRK3nO8KuoHu07nY3aQ0XQIm31muzm8PiSNBmNwmxKAAe+g8NrKCZ1LTdeNTRuzWau9fz5rlT3EFRUSjI6lktQZnaTuJBFQJvWFmL9Yz0DDkJikA6HI9kDJmoAAPruca03NPPbOtPWKRsmFRZFz1DZ18PR2Ud-vD0e-DkvXPTeSxoWSDXQcny3F9uwA0BH03BlY05ZVx0bZNmzjFU1Q1bZM3Tec8wRCCoOfOh1k2csqxrW06AQnFBV8TC2yw39UnzWkIKZGwl36WRV3w0CKNFWFiKkStqyUWs6H5JsQWFUZ2JXCggI3AiSHFUA+NAMtBNIkTyJIcD5WeCph25FRZA04TRJISi9WbE8eiJc9sL-cY0S5YzTLIsDcL0pZnNcgJanRSZYKldR6EsiSTlefRtBQ1V1VU2iOwcxiCy83xDJckyeRUdkwqQkEEvqejczuXTe0Zd5Ph8kyhPcii-NZSZ6HMLL2XEvKhXPJyjOqzTzOU+qApqJrQBa0qkU-AD5JAsckuaABIfYrKnLpTzs8EkopSbuO3FKysIVKpugsp0NyycOv6KQPAIC9QF4Xbxq24CjsIgbPCG07qNBLRLqUa6NtAAR7oVR6FJ4wCWo+lNiR+v6GPMDAgeeEGVQoGgpBkzi5MfSHm1Y9G6A4rinsU7R3w-NxkeewDRU7UwyfJl4Ko0Kq3K0ut6YZimDu247Xsa2mOc5-aysOxSpAh2amIeHtxoqajYzkapg1yz6bO-ey4bGeWOKVlJQ3mVKzsAmq2Yo2ak0+grOzGy1pCXFQqjKOoceWr8z3WzXpLoB2GVWE2+ocN8hc-Gc1p9W4Ri9kgfadlUdaUYN9ZlhV7cduhVmEh2yC3DEGLaz7oaum67s8vbU99lV2KUABHLYnXNxCC++ov-sB0vxvL2OpDqSZUWoNZc+KhtASbi6W81hHmMNip6BruuyDZChWGH8KPVs71oqXyPZ9r4wF6TiCd-nmx4+DUL+mXvZXBHlMrYvxj2+BoILtPlJN+X+h89vs54nvz-H+eDWOSr8TDny3p-C2KZ0x-0Rn2aQCd9AUHZLGOee9F4fy-tZaQJAiDqHqDAgBcDmYv0VgnN+MDIFYJRLgwqbYYE230tIO8NAyBvBdicNW7tw7DApMw1hB9DZ8LeOLGg2V2E0R-u2HMEcpYGz2njIRm8c7BjakbL64JRhCOUiA1IU89oVBoPoFYqMmD425FQPudYG4LTcFRFMFRSAjmQYY4xNBTGDC5BYsG44g5CwqJ41ETBnFGNHG4sxATvGzUIciRxQTVQhK3GEjxXiZp5ycDY6+S0OErXXj+IeFJYnBNce4tgESdrRM-BEuJLjQklPMZYs2aTHAZNAHYqhocN7-U0V46pCSTHhJSR5MMhsamJNMShcR6i5Lj3ybdWBvgCDPzkqM6OkzC6-Rum3YZe1Z723iSsVZDc2mSWbhs-6k9pYsSZrIfQ+hNDZzHJNf22lzAjnkEQYMrNzIQMQmoqSNy7lUAeS+OmwcjxPN6i80AbyPkxmeWUf+lyRl9KSaUwZhFUbd1ufcyJTScQyVAKMkxoA0iEpReMuC8YonHOyVIQp+zakDIaRZWagtQAAH5GbMgBTisceMaZErcXYUFYLRWtGFIspgF0VnxElnYNlAAuLlNgeVAu8fy1k2hBVMGFWysVR4JVLIZZxWVecRX6ota4XZ3tjWHLzrIi0jCsWAuBY0oemDXYdLyRHf02K1XlO2Q9A68K3UyMoflSRRUZHzOhUweQXztKhSOavFsUi01yr0bLaQzkEIfhpWvdWHtZmjFVa6pSkRohsoqDTCFZltLW1AFEVpwcYpoRrcGyFVj7UksyCW7kowKnOXRpYGgQKRKTLeQmhFnY5hAA","body":"function is_amb(component) {      \n    return is_tagged_list(component, \"application\") && \n           is_name(function_expression(component)) && \n           symbol_of_name(function_expression(component)) === \"amb\";\n}\nfunction amb_choices(component) {\n    return arg_expressions(component);\n} "},{"body":"\n\tThe symbol ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" here is no longer\n\ta name with proper scoping. Whenever the symbol\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" appears as the function\n\texpression of an application, the evaluator treats the application as\n\ta nondeterministic choice point.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/4.3.3#footnote-2"}]},{"tag":"TEXT","id":"#p12","child":[{"body":"\n    We must also add to the dispatch in ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze"},{"body":" a\n    clause that will recognize\n    such expressions and generate an appropriate execution\n      function:","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":694,"program":"chap=4&prgrm=","body":"...\n: is_amb(component)\n? analyze_amb(component)\n: is_application(component)\n... "}]},{"tag":"TEXT","id":"#p13","child":[{"body":"\n    The top-level\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"ambeval"},{"body":" (similar to the version of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    given in section ","tag":"#text"},{"tag":"REF","body":"4.1.7","href":"/sicpjs/4.1.7"},{"body":") analyzes the\n    given\n    component\n    and applies the resulting execution\n    function\n    to the given environment, together with two given continuations:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":690,"program":"chap=4&prgrm=","body":"function ambeval(component, env, succeed, fail) {      \n    return analyze(component)(env, succeed, fail);\n} "}]},{"tag":"TEXT","id":"#p14","child":[{"body":"\n    A success\n    \n    continuation is a\n    function\n    of two arguments: the value just obtained and another failure continuation to\n    be used if that value leads to a subsequent failure. A\n    \n    failure continuation\n    is a\n    function\n    of no arguments.  So \n    the general form of an\n    \n    execution\n    function\n    is\n    ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\n(env, succeed, fail) => {      \n    // $\\texttt{succeed}\\,$ is $\\texttt{(value, fail) =>}~\\ldots$\n    // $\\texttt{fail}\\,$ is $\\texttt{() =>}~\\ldots$\n    $\\ldots$\n}\n      "}]},{"tag":"TEXT","id":"#p15","child":[{"body":"\n    For example, executing\n    ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nambeval($component$,\n        the_global_environment,\n        (value, fail) => value,\n        () => \"failed\");\n\t  "},{"body":"\n    will attempt to evaluate the given\n    component\n    and will return either the\n    component's\n    value (if the evaluation succeeds) or the\n    \n\tstring ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"failed\""},{"body":"\n    (if the evaluation fails).\n    The call to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"ambeval"},{"body":" in the driver loop shown\n    below uses much more complicated continuation\n    functions,\n    which continue the loop and support the\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n    request.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p16","child":[{"body":"\n    Most of the complexity of the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator\n    results from the mechanics of passing the continuations around as the\n    execution\n    functions\n    call each other.  In going through the following code, you should compare\n    each of the execution\n    functions\n    with the corresponding\n    function\n    for the ordinary evaluator given in\n    section ","tag":"#text"},{"tag":"REF","body":"4.1.7","href":"/sicpjs/4.1.7"},{"body":".\n  ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h3","child":[{"body":"Simple expressions","tag":"#text"}]},{"tag":"TEXT","id":"#p17","child":[{"body":"\n    The execution\n    functions\n    for the simplest kinds of expressions are\n    essentially the same as those for the ordinary evaluator, except for the\n    need to manage the continuations.  The execution\n    functions\n    simply succeed with the value of the expression, passing along the failure\n    continuation that was passed to them.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":689,"program":"chap=4&prgrm=","body":"function analyze_literal(component) {\n    return (env, succeed, fail) =>\n               succeed(literal_value(component), fail);\n} "},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":687,"program":"chap=4&prgrm=","body":"function analyze_name(component) {\n    return (env, succeed, fail) =>\n             succeed(lookup_symbol_value(symbol_of_name(component),\n                                         env),\n                     fail);\n} "},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":686,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQGZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMaAJlzFy1OqCr0A+hQCGAc3kBTACZSANpIoAKMmwAOdJSQoAaUBQAWSmQoCUoAN7ZQr0EyUUiTEhOn7ZKiZdAyMTBwAyCNBrWRUQ1kMSYwoHAF4Mi2tbeQBubABfYVJKWl9JDSoKJSZZdQSklIdnN3dPb3LpOUVVSvodPUSws1AAIk1q2vVRu3yikVLxCZq6qQA3OqIlBuHm1pc3Dy8fGKU47TkqesHG8NnC4tEy0FZZAGsbZantDfUt5oOriOHVAmn62nGVRW03Mv3+c0ei06UhIslY2xuuycgLax2R3WUajBA1CyRM5lGqPRMwR2AWYl8rw+KLR23oAE9WAAjGjqAGtYEnYkQqlKUbmDnc3n3Ip0koM0CSnnqKQ0Ags9E7MmpbEC9onWLxS7XUlNGWIhUVWT0ehUeQkdEmLVNXWHfX4hSEvokobainW232x0UGkPenPAN2h0pKRK3nO8KuoHu07nY3aQ0XQIm31muzm8PiSNBmNwmxKAAe+g8NrKCZ1LTdeNTRuzWau9fz5rlT3EFRUSjI6lktQZnaTuJBFQJvWFmL9Yz0DDkJikA6HI9kDJmoAAPruca03NPPbOtPWKRsmFRZFz1DZ18PR2Ud-vD0e-DkvXPTeSxoWSDXQcny3F9uwA0BH03BlY05ZVx0bZNmzjFU1Q1bZM3Tec8wRCCoOfOh1k2csqxrW06AQnFBV8TC2yw39UnzWkIKZGwl36WRV3w0CKNFWFiKkStqyUWs6H5JsQWFUZ2JXCggI3AiSHFUA+NAMtBNIkTyJIcD5WeCph25FRZA04TRJISi9WbE8eiJc9sL-cY0S5YzTLIsDcL0pZnNcgJanRSZYKldR6EsiSTlefRtBQ1V1VU2iOwcxiCy83xDJckyeRUdkwqQkEEvqejczuXTe0Zd5Ph8kyhPcii-NZSZ6HMLL2XEvKhXPJyjOqzTzOU+qApqJrQBa0qkU-AD5JAsckuaABIfYrKnLpTzs8EkopSbuO3FKysIVKpugsp0NyycOv6KQPAIC9QF4Xbxq24CjsIgbPCG07qNBLRLqUa6NtAAR7oVR6FJ4wCWo+lNiR+v6GPMDAgeeEGVQoGgpBkzi5MfSHm1Y9G6A4rinsU7R3w-NxkeewDRU7UwyfJl4Ko0Kq3K0ut6YZimDu247Xsa2mOc5-aysOxSpAh2amIeHtxoqajYzkapg1yz6bO-ey4bGeWOKVlJQ3mVKzsAmq2Yo2ak0+grOzGy1pCXFQqjKOoceWr8z3WzXpLoB2GVWE2+ocN8hc-Gc1p9W4Ri9kgfadlUdaUYN9ZlhV7cduhVmEh2yC3DEGLaz7oaum67s8vbU99lV2KUABHLYnXNxCC++ov-sB0vxvL2OpDqSZUWoNZc+KhtASbi6W81hHmMNip6BruuyDZChWGH8KPVs71oqXyPZ9r4wF6TiCd-nmx4+DUL+mXvZXBHlMrYvxj2+BoILtPlJN+X+h89vs54nvz-H+eDWOSr8TDny3p-C2KZ0x-0Rn2aQCd9AUHZLGOee9F4fy-tZaQJAiDqHqDAgBcDmYv0VgnN+MDIFYJRLgwqbYYE230tIO8NAyBvBdicNW7tw7DApMw1hB9DZ8LeOLGg2V2E0R-u2HMEcpYGz2njIRm8c7BjakbL64JRhCOUiA1IU89oVBoPoFYqMmD425FQPudYG4LTcFRFMFRSAjmQYY4xNBTGDC5BYsG44g5CwqJ41ETBnFGNHG4sxATvGzUIciRxQTVQhK3GEjxXiZp5ycDY6+S0OErXXj+IeFJYnBNce4tgESdrRM-BEuJLjQklPMZYs2aTHAZNAHYqhocN7-U0V46pCSTHhJSR5MMhsamJNMShcR6i5Lj3ybdWBvgCDPzkqM6OkzC6-Rum3YZe1Z723iSsVZDc2mSWbhs-6k9pYsSZrIfQ+hNDZzHJNf22lzAjnkEQYMrNzIQMQmoqSNy7lUAeS+OmwcjxPN6i80AbyPkxmeWUf+lyRl9KSaUwZhFUbd1ufcyJTScQyVAKMkxoA0iEpReMuC8YonHOyVIQp+zakDIaRZWagtQAAH5GbMgBTisceMaZErcXYUFYLRWtGFIspgF0VnxElnYNlAAuLlNgeVAu8fy1k2hBVMGFWysVR4JVLIZZxWVecRX6ota4XZ3tjWHLzrIi0jCsWAuBY0oemDXYdLyRHf02K1XlO2Q9A68K3UyMoflSRRUZHzOhUweQXztKhSOavFsUi01ytpPgACjACAsHYFAOAiBkDoH4BgR1RCKBMCIFYHKFZVGqyYTQXkZwLJ1tacHTlFZFWgBqCwYIFZeFNvvJxHtVZBzVBUOYDwC8qADxUAI-R0gCB1A5NoNtjg1EAEIQ5VprWu2YoBZRXOZABbQfMhrNVEeycwxg1j1qhp1TEpA1AAXFHq1o56pWXuyjekgd6KkVCfdHKQp6CD3vaatDeBAKRAZfalBdQaRaftCmBico9pkbOg3Mipk0Iaod+ehmG2gsNbLkYhpEgk-1BDoMrfDNK0qnOulhi5R7DZ43lmWEIJgXQEYfRojjxFlJLmqOEAD0gBN-G2GWcDnrIPCjLBSCTWwEMKiU2xOgImdDSbQ9-NMbZpMMPEHvdQNBbQkHjbe6j0YnS3pkycdMtmcNGtzZq2zOnmyZkcw8AlVhyyJCQZRtYVngwkpUjQ-Iydnh4xc5qFCw0yw-Po6AAIQRoqUpCvxSTiKyPA38ifdLKG8tX0ySmzMMWlAxvK0RLLxGitOEWim9M5XDO+ErCJtQlmWDWZ0HFzLw0uTWnLH+uzaVjDyCsGl4KECMikvvOZibvxP5ss5Sl4I0W8uTeVPFldwqRqDcC-K4OSq5vjcsJt3kECAA8oIxsLZ28tntTA+0QlRjQRmJB2SxveWfRURA-WqCVaMUAABqdtlrFSVosfIKgBAcpxYcKD5SQPQfvo-P0a85mYc5UW-mbtva3EvabYQJQAB3L7sLQG-f+yoQHIOweWvR1DrH52QoI7GBSOnqOjyM8x7Dn4O2WugibW8P7QVlTVa2Cz39d6JwQVvRoJtUU3O-NaIfbOFletqR2xOBmDbqF4JZ0t8HHKe1-oV4Y7QxnTNQ8C8Ft+tnDvg6VShElmRMzw6560TlmYcee7cM79Xab4fmHTDj+4DMigMxh6AS3f7Xekt84JfzyDOs0Z43q-HwQUIFJIDyZ9KlWShgjz2kKSgdfkwJeV0LkqLrldj-+vVn16CB6q3F2rrJdXG-BXliXIl2-oilhHnEkeU3y5MxbrzrG9rFkAjFTj2etfqGl6ouXZvx9K+G+X1wavOKG766o3X9jsE0MN47y1nKx+K9j0Oa35nbddeVg7v3rhnfpfj6mj3xvOWzzkj7ldmWz8LUA9d9oECtdtQ8Bd8hi96Zo96939E8EEAtU9usD9yZM8pcxhSA89o4C90RQAABafA6FWsEsEwIvcmAoEvWeLfI8SvPLavZzDbLzMFJvFvHvNvZrc1LvZgVkXvQrDvcPCg4fJLS-CfYbTNMAbNZgNgDgQtbgEtNAFActZEasKgVgR2AeEDVKYjUgEbEOOTc8EQCkVQ9Q-uMUGNEwjQmwNQu5MhEwbxEQPQq2Rw7sAlSwswrQsqRgWbc8MmKSQ0ZSNwQ0UVTvD8KSY0QI1wY0EIrgtwKSVbSI5LQIJgGIvwzqYkRI4kVI8mKSCoHBPBZSPImhIWUIg1TqB2egO5WQdkZSCoqoz7TmUo8VTqTPSIzPMFJouIzqV4KwbuLkegcUHoywPoxgBmTo1wKSYHRItwNdcwVqElAAPlAArDpwaPGKmQhHwOmNcFmNAHmLSCWJWKILWNiImM6nwMKUiJWNaAOLcCIOuPWKkgACptiY8B09j0hDjQAni9jXBHjOpgBXjdj9iviwATi0iNEABSIE94kE5Y0ASE340Af4jRGbaY4Ez4+EmbD404jY0YTdDIdE2EzElYgk0lVqXEqSS7GEuYkk0Aa7VwCkiEnQUYS7NIbYjExY+EtkxklElkhYmkj4rklYpY3kykzqBY9k8wI8Tk24kU0lHE5kiETdV4+Em40U0AbdVwOtMme4Nw68Uw2dGwSaOLElHESKDMH+cwdwo0zwpERFfUtQqwu0mCGgLkAAK3HW8PNJuR0N8FuPiINKsOUmcN0PzFxOSyDI8OzXuGwEdMNM0Ixkpx8PBCkmfV+gsVUGUnTMWWSBUHWO4LKI0UgBIFzKqBqOlJLLLKQQLMLK6I0SGKkFgEgEiMbObNrLrLxMbIAFFEieyOy6ypIAA5WQIc14kcocwAzs1oPUgmCgSMp0jwpM4BArM01oC0sgLkzMMgXbG0xMuczGB0uchchM9TZcTGPgtctwDcrcyNNsHc3cqM205cxFSLIsbFZBPc407Qowr7YkPQnlZBCxOlaOGodQdkG3d02QDYZva8RBUmfVL8qQGw+8YMBw3QiM8mN5f83II8JFHZdofQe-NPJ0PQtrYwDrKjB-N+AFCis9J8zQk0grTC6ctwJC5csXC7Ac43Wi1ZJCyaN0z0ygYaZ-Y3dig81cBLbi8HBA5PYilA2kHzbIeQEzAbFUZAkLUlH-UXDSt+WMrNVKHNPNWQrgYtTAHAN85EZyBCD8JLThMOG6UYVVV1JSSIaINlPIzVCFMybSa2UAKIenBmGKNCGmby2qFle1d-Jy7kUYCpZydGSwGgIFPvZNFNN5BNBFTsPRcaTiOodkAAL0+ChG+FSval8HrwlCIDIAXlUHMGXSuE+K53oCqpqviC+FWE41mjquzEF1yvAsKpOlKrUQqt+2qqUFqsIB6sWPfWarGtUG0HHxFyIrn2IhZ1ikGrNVEsLNsxYuDnqr5GyoVD6oKpPlQXIHQQoES1V0NiPhSBvDwRylkGalQLKpj1vUqrmsnUmoaq5L91kBGtEvwFmoXhtFAGEwsSIDBkIDcTBrqE0HM1AAABIAAdaoCsCgDGxwWQAoRG0S7QEyBTb69QQGaa7guWd0XvfG3vKci1b-Fq8a+IAm4ibqq4QGLa0AJVLkEa4Ghmlm4m6Sj8LNbMbwMvcGnBKGggGG7OPBKHJG1GtrTG7G3G43fawQ1wEfbfQ2dfYjZzUgKdESOSEQK68mPXfI+oIBTwo3MVTlGvQ20gLnY7K-W6kwe68CnWqVO2kgcwTMC2o28M9miwNsX20gT+NWw9fFY8o20LC046wqiUcBMO02k-P2wK8mC-OPW4nMzMlQbtbWsrEO8AtsP23q1Efqh8YmXFd1CcAlF3UlHmQiCZalVoAlNYEQULWO7YeuwCdSENCK91ROlMbm+mia1W360VVu0gCq5-fnJfImkm24lXS1GfTilUefdLTLZfKA7gpvYe+ILOvMvmrZcHAoXa8mVWw6iMUuk67uEg7rU6Gut-UlGfT5RuvOLe1wFutup+q+wq-G2+z5HuyFKxe1d+4a960a1qvmxq8ekQKe8HGew+zEjdUVfAJ43gJ4gOglXkNQMsULRa0XFayTKXAO1isFZg7g5ewhyXBfX4TegOnez6hBkhsVbQJBo8VBgQDB0hsVSh9LSm7PZh7hzmbB3vcwQRoRtA8Q8R-VT6fagQVh0BiRtwAoMOsVE+5-c+-CnKn+s8mOdOaRLEZBhrD+48-QL+6FHRrjPR0uqQTOf1QeaNUBglMgcxjuqxtOGxquXeeuEBiO5caFVxyxzufR7udQXuUCAea2UBz6Iez6qB0msFMxye965-IG+m0GsWyG4GGGpQOEUCBG3zSM1Qex1OlBsAVGQlLkS4XwFGtGjGigRwTOZGsgSwEcAAA17xxunszlEbnugeN2nF3UsByh6e0y2s5RceSb-Q+sgb6a2qVVkFgfAZ5pHuzEBlPsFskOFo8DBo0wholpybyeoAKesCKazhzjmhaQ0Z6ovvEGb04lVGrVFjBiTTxSyWRGdoXk7Ae1kGqo+VwRznxtuQoo2eDjNtBaFgtPucAhoCea7qamkcVDOoXgVmURSFef7ppqPCVX7ArtSXdQe2FC7pXutm7TNtuYY2lXVEcVvvmvh3cxBChcfqWNGCeJpcDDzJeIlDAIpYsbyoGsUSGoJRalCyERETESbrcAJRM2lu8MVHV0eaxjxcytGicePPZajFUDlehjQg1ftHmplZ2zVf8a5ECf5e2FVaS1idmdHoOPfVNeSfRoovkuVkNYy1AD1bzOGh2ufxWa+uuYat5Y7p+jxFRd1h8art+QJSYDNbLu0Hll7qiateWd3vibtdFRjambWAhZmNob6YSfBz9e0HYwps41+F2zkYFtVxua0YVGUDkjeVCkWZDulxmd5qJuK1sXec-DNvxr9oeyLfBY7e7UzGbYYDsDgc7LSbGoyb2fFuyZSKsEkDlrqcVpEC6enPxrjUQYLc7Pre7jjVCnTDHc-hza7xSaUfYbAB5tnZdvnaRjcURYZnwGnW8FtAHlhrwQsDe1qYVoafreadaaYA6cbY3cvZmMbb5oRl3fA4gYZrPWSK3fkFeUParaUf2oRjPZVrWbQ85k0an3GkrEHGrRVT9Rcr9JQ-kGGj9fid4yoX4p-N0IHd3qBbuU-IYu-LKgo6+1PfZtVu7UA1CGfRdLrEcNKaPBtoOjw10IQotXIuA10qdD44OmQz9Nw9aEg+U5FkU50BcLPe0Bah+marCZ3duNEqLfJtDc40M5rFwR1Gkc5TU3xm4ydBs5Ejs6xa7yVX3tqukcrbPf46O0e2e1-NGFIDeBIBoBJwWUNiQSMQINHWI+qGdV5SGQI6Op0ZS-9WAcjb8f6EIFjZOr9Io0TclmNfy5Pejt9I7so4yoJiTe7etfbdtYWPfQICWement-MrZg-1X3cbb7ZbfE+2s66EaQ+Ggw-6aEaI7IBI6y-I6MKfcLMg+G9g85ho6W+4Mm6w72pw6w-PtaXS8vvNe7m5HvuPMmYYCq6ihq+hW5ASqSpBoa5TSa9WZ+oXq5wgkrWQWSHRt0ESuSuNstSToNxace5Ek8-BxtrbEh8tSVW3IB5BonYvbW7R1Tc2+DlYd69R6iLiV+50CwkR4h8HzUa50+m+5RDa10D9sUY-AKCDaCbeZTQMmKudlZQ7T5bLsqEmDZ7zgE+wU1XZ6Fk5WDZpiF85hxekGsvF4ZhF8y+l756C6tDI8rpkR+fl5V-xbV6V+kG1SZVV92HV-Na1XJX15gkxWcoN+1Fxx1+c+sd54JY5+DeCdLu+dt-SlclK8V+F85+vo956h8py+16Fkl5QW8a+Zl7Tt94Gs+bZGRZPlITPlJdt8Fe985jl5O9T8d5D8-G1kT7fkj4-Az657z7RYjeD4l4mm5mVdDV2Cuad8seRhkDRg4uxkln5+ea18N4b5O67rd5z6tH-oL7T9l+j5VSH-L+75z-QK6XC8i+i8VHZHsKOKII7qTksru65FyYd59VN2zbg7e75Hqzwu7bcdmle6+vw+UMICNXoF5GrTrAsX0GrQAu5G3-qD8lnghA3WRwkBIGf-nKI5D0MwHbonhUpuk-YVFEimYDxp5t8eoTcJmYUxK0M8amJHzvmSDZ4JYw9-BkKFCf4v8Jw94ecnfz+C4DQs5LOaDiAggWJwmKobWvgJGBHAgkL1CQAQBjwMCoqTAmoiwO7ZcCFG9MSgkoFLw0FT+b-X4AhylTbBRgP-OnBwKAEFAQBJDMAapUgFBZqK5IEhvgGcjv84ONoEhggxUhtYEBNQSxAPCQbSMSBD-AmKFlWwGDLBuA1RoWVVjcYfAqwbWqMC4HKR4BPcEwREwqy09LU6jOsloLEF1AiaItfQWgNAq5lVAAdRwerWEKtAaBvgugVfi5wMCIWWPD7sbjqLDgcoowfAMkNcHqBgubicgqKhUbRMUwHgAeJIOig4CEUrhSOjQlsYjhZ4KRUlEDhx5CxkaG-DwLXCCDbB9AnbboR+F6Hdtt0+gE3NZQcBKoAA5OAFAj0BFkqgNoAMI8BzDcKdZXoZQVGHcNehLEBOFv2CBQhWA5gddHsLcDjDmex+A3G2kuFjD6YnKM2g8NFTXCPwOLJWO-kzD3DLh7wqPtcVeHBx-hHwl4EcJqDaBThIeNsHWgPSwcdhQIzsr0KIEet-+bQ1YaSnJaIjWgBww2J-xsAk43E8QQkUwDDgjDL2-w-oUQEGHaBt0RRA3KQHxH5k4R8IuxOsO2B0jbh9QdEG-2CCZhGR6I-MtCI7AkiyRXYLYVcLy7zlJawnUUaFn5FojJBGApRv8IFFKjQs6YNUbPGVHdDKRfGHQJmFFHegK2sLYDKKJZHcEER2Iy0XGVMYeBDAtoMgSmR0BzDhI+gOYeYDmGS0mAHo0AHMNRi+i-RFiX0XMK5DsgQxJOKoJYDmEHpcRe0fEbY3tHW4K4tjSwLUC-7kikRSWYUK6PtH4F9AaYwbIGJx4gjg4CY0UfRSUAOiPGp7fYZ7gTGRdSAqY9MdsCYgUjCg1om0QSkbFXdnR2gOYT2JDH9AiAA4EwCGOrBqgtIbiEMQ8hnHDgbQMYrYb0Jbo1B+ieDc8HMNqFcghxXgB2CJBDH3hKAItegCGLOCXUhx94KsSeNjEY8Sxto-xiOGoBDgRI648EHMMfFAp7wIY3zCGNkCLisxEEBMbaESD3gUQpo5sYNix5GMhGeo5sDmOAm2F8CPY-MYWNnjFiYJ9Y9EVIArEfjnxtYlUZhMkHYSiR2gHsaHQlEETdhnY8HHGPGgNjwJBYlsVBNGH-Crk7ILfhpHaykSGJqEirMf1IaljXq1lHsRBNnjSlUegksFK8HYkkQuJOY5CYxKLHiT9Ukk6ciJMUliSsx4HBMW6OTFdwNJrY8UTiOHzUSVJSWaSRxPk7xAgJKFGwOpN4msMLRbwjsaZMtS0SFQQElIGgmYl-DsxG42eC5wXjoTdRhE2eGBKbEGTWGykjCRagTFbjRJhkiiXWKomuSxU7k54HFNXEJSfJd466vImqKWSnWqyeKQZMzGFlJJn0ayiVN4nRTwOqkyFgVNkl0UcxW4lCS2OCnOTwO1UlsbVJom3idJSYx0fpIcldgLR-wgoJc1SmgBYJjLRqZxLorliSJW48iaxStFTTnJgErCQwMhH-8CB0EiSTiC1EYi-+AApKa8P+E10UgNgrCQFJExfMnJEjPUeyMhFcjtAR05kWdPbHdtbpn07EWtPWnBxYq1-YNv7zq590w0UbUxpuFYDasWYn6FehixkTld5yDrf0mPwWoswJYvjRrimziYdtseaPRhtFm0IDR+sv5H1ltxrayh1k10GmQtUYz0yx4GyOmXDWwGkDMqxALAfiJSIo4uhAMnodgATHbScxP4z0cONHEUAIxUY78dYBnFbgOpjwuYfQEvH6ATxno4MZ6NFl+iNwC4tsbB0UGIiAADOp3BzrNpGZs02bWRLhAA","body":"function analyze_lambda_expression(component) {\n    const params = lambda_parameter_symbols(component);\n    const bfun = analyze(lambda_body(component));\n    return (env, succeed, fail) =>\n             succeed(make_function(params, bfun, env),\n                     fail);\n} "}]},{"tag":"TEXT","id":"#p18","child":[{"body":"\n    Notice that looking up a\n    name\n    always \"succeeds.\"\n    If\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"lookup_symbol_value"},{"body":"\n    fails to find the\n    name,\n    it signals an\n    error, as usual.  Such a \"failure\" indicates a program\n    bug—a reference to an unbound\n    name;\n    it is not an indication\n    that we should try another nondeterministic choice instead of the one that\n    is currently being tried.\n  ","tag":"#text"}]},{"tag":"SUBHEADING","id":"#h4","child":[{"body":"Conditionals and sequences","tag":"#text"}]},{"tag":"TEXT","id":"#p19","child":[{"body":"\n    Conditionals are also handled in a similar way as in the ordinary\n    evaluator.  The execution\n    function\n    generated by\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze_conditional"},{"body":"\n    invokes the predicate execution\n    function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"pfun"},{"body":"\n    with a success continuation that checks whether the predicate value is true\n    and goes on to execute either the consequent or the alternative.  If the\n    execution of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"pfun"},{"body":"\n    fails, the original failure continuation for\n    the\n    \n\tconditional\n      \n    expression is called.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction analyze_conditional(component) {      \n    const pfun = analyze(conditional_predicate(component));\n    const cfun = analyze(conditional_consequent(component));\n    const afun = analyze(conditional_alternative(component));\n    return (env, succeed, fail) =>\n             pfun(env,\n                  // success continuation for evaluating the predicate \n                  // to obtain $\\texttt{pred\\char`_value}$\n                  (pred_value, fail2) =>\n                    is_truthy(pred_value) \n                    ? cfun(env, succeed, fail2)\n                    : afun(env, succeed, fail2),\n                  // failure continuation for evaluating the predicate\t\t    \n                  fail);\n}\n      "}]},{"tag":"TEXT","id":"#p20","child":[{"body":"\n\tSequences are also handled in the same way as in the previous\n\tevaluator, except for the machinations in the\n\tsubfunction\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sequentially"},{"body":" that are required for passing the\n\tcontinuations. Namely, to sequentially execute ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":"\n\tand then ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"b"},{"body":", we call\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":" with a success continuation that calls\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"b"},{"body":".\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction analyze_sequence(stmts) {\n    function sequentially(a, b) {\n        return (env, succeed, fail) => \n                 a(env, \n                   // success continuation for calling $\\texttt{a}$\n                   (a_value, fail2) =>\n                     is_return_value(a_value)\n                     ? succeed(a_value, fail2)\n                     : b(env, succeed, fail2),\n                   // failure continuation for calling $\\texttt{a}$\n                   fail);\n    }\n    function loop(first_fun, rest_funs) {\n        return is_null(rest_funs)\n               ? first_fun\n               : loop(sequentially(first_fun, head(rest_funs)),\n                      tail(rest_funs));\n    }\n    const funs = map(analyze, stmts);\n    return is_null(funs) \n           ? env => undefined\n           : loop(head(funs), tail(funs));\n}\n\t  "}]},{"tag":"SUBHEADING","id":"#h5","child":[{"body":"Declarations\n      and assignments\n    ","tag":"#text"}]},{"tag":"TEXT","id":"#p21","child":[{"body":"Declarations\n    are another case where we must go to some trouble to\n    manage the continuations, because it is necessary to evaluate the\n    \n\tdeclaration-value expression before actually declaring the new name.\n      \n    To accomplish this, the\n    declaration-value\n    execution\n    function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"vfun"},{"body":"\n    is called with the environment, a success continuation, and the\n    failure continuation.  If the execution of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"vfun"},{"body":"\n    succeeds, obtaining a value ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"val"},{"body":" for the\n    \n\tdeclared name, the name is declared and the success is propagated:\n      ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":682,"program":"chap=4&prgrm=","body":"function analyze_declaration(component) {\n    const symbol = declaration_symbol(component);\n    const vfun = analyze(declaration_value_expression(component));\n    return (env, succeed, fail) => \n             vfun(env,\n                  (val, fail2) => {\n                      assign_symbol_value(symbol, val, env);\n                      return succeed(undefined, fail2);\n                  },\n                  fail);\n} "}]},{"tag":"TEXT","id":"#p22","child":[{"body":"\n    Assignments\n    \n    are more interesting.  This is the first place where we\n    really use the continuations, rather than just passing them around.\n    The execution\n    function\n    for assignments starts out like the one for\n    declarations.\n    It first attempts\n    to obtain the new value to be assigned to the\n    name.\n    If this evaluation of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"vfun"},{"body":"  \n    fails, the assignment fails.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p23","child":[{"body":"\n    If\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"vfun"},{"body":"  \n    succeeds, however, and we go on to make the assignment, we must consider the\n    possibility that this branch of the computation might later fail, which will\n    require us to backtrack out of the assignment.  Thus, we must arrange to\n    undo the assignment as part of the backtracking  process.","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-3","body":"3","href":"/sicpjs/4.3.3#footnote-3"}]},{"tag":"TEXT","id":"#p24","child":[{"body":"\n    This is accomplished by giving\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"vfun"},{"body":"  \n    a success continuation (marked with the comment \"*1*\" below)\n    that saves the old value of the variable before assigning the new value to\n    the variable and proceeding from the assignment.  The failure continuation\n    that is passed along with the value of the assignment (marked with the\n    comment \"*2*\" below) restores the old value of the variable\n    before continuing the failure. That is, a successful assignment provides a\n    failure continuation that will intercept a subsequent failure; whatever\n    failure would otherwise have called ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"fail2"},{"body":" calls\n    this\n    function\n    instead, to undo the assignment before actually calling\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"fail2"},{"body":".\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":674,"program":"chap=4&prgrm=","body":"function analyze_assignment(component) {\n    const symbol = assignment_symbol(component);\n    const vfun = analyze(assignment_value_expression(component));\n    return (env, succeed, fail) =>\n             vfun(env,\n                  (val, fail2) => {              // *1*\n                      const old_value = lookup_symbol_value(symbol,\n                                                            env);\n                      assign_symbol_value(symbol, val, env);\n                      return succeed(val,\n                                     () => {     // *2*\n                                         assign_symbol_value(symbol,\n                                                             old_value, \n                                                             env);\n                                         return fail2();\n                                     });\n                  },\n                  fail);\n} "}]},{"tag":"SUBHEADING","id":"#h6","child":[{"body":"Return statements and blocks","tag":"#text"}]},{"tag":"TEXT","id":"#p25","child":[{"body":"\n\tAnalyzing return statements is straightforward. The execution\n\tfunction applies the execution function that results from\n\tanalyzing the return expression to a success continuation that\n\tcalls the original success continuation with the return value\n\twrapped in a return value object.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"prependLength":685,"program":"chap=4&prgrm=","body":"function analyze_return_statement(component) {\n    const rfun = analyze(return_expression(component));\n    return (env, succeed, fail) =>\n             rfun(env,\n                  (val, fail2) =>\n                    succeed(make_return_value(val), fail2),\n                  fail);\n} "}]},{"tag":"TEXT","id":"#p26","child":[{"body":"\n\tThe execution function for blocks calls the body's execution\n\tfunction on an extended environment, without changing success or\n\tfailure continuations.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"prependLength":683,"program":"chap=4&prgrm=","body":"function analyze_block(component) {\n    const body = block_body(component);\n    const locals = scan_out_declarations(body);\n    const unassigneds = list_of_unassigned(locals);\n    const bfun = analyze(body);\n    return (env, succeed, fail) =>\n             bfun(extend_environment(locals, unassigneds, env),\n                  succeed, \n                  fail);\n} "}]},{"tag":"SUBHEADING","id":"#h7","child":[{"body":"Function\n      applications\n    ","tag":"#text"}]},{"tag":"TEXT","id":"#p27","child":[{"body":"\n    The execution function \n    function\n    for applications contains no new ideas except for the technical complexity\n    of managing the continuations.  This complexity arises in\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze_application"},{"body":",  \n    due to the need to keep track of the success and failure continuations as\n    we evaluate the\n    argument expressions.\n    We use a\n    function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"get_args"},{"body":"  \n    to evaluate the list of\n    argument expressions,\n    rather than a simple\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" as in the ordinary evaluator.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":11,"eval":true,"prependLength":677,"program":"chap=4&prgrm=","body":"function analyze_application(component) {\n    const ffun = analyze(function_expression(component));\n    const afuns = map(analyze, arg_expressions(component));\n    return (env, succeed, fail) =>\n             ffun(env,\n                  (fun, fail2) =>\n                    get_args(afuns, \n                             env,\n                             (args, fail3) =>\n                               execute_application(fun,\n                                                   args, \n                                                   succeed,\n                                                   fail3),\n                             fail2),\n                  fail); \n} "}]},{"tag":"TEXT","id":"#p28","child":[{"body":"\n\tIn ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"get_args"},{"body":",\n\tnotice how walking down the list of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"afun"},{"body":"\n\texecution functions\n\tand constructing the resulting list of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"args"},{"body":"\n\tis accomplished by calling each\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"afun"},{"body":"\n\tin the list with a success continuation that recursively calls\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"get_args"},{"body":".\n      \n    Each of these recursive calls to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"get_args"},{"body":"  \n    has a success continuation whose value is the\n    \n\tnew list resulting from using\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"pair"},{"body":"\n\tto adjoin the newly obtained argument\n\tto the list of accumulated arguments:\n      ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction get_args(afuns, env, succeed, fail) {      \n    return is_null(afuns)\n           ? succeed(null, fail)\n           : head(afuns)(env,\n                         // success continuation for this $\\texttt{afun}$\n                         (arg, fail2) =>\n                           get_args(tail(afuns),\n                                    env,\n                                    // success continuation for\n                                    // recursive call to $\\texttt{get\\char`_args}$\n                                    (args, fail3) =>\n                                      succeed(pair(arg, args),\n                                              fail3),\n                                    fail2),\n                         fail);\n}\n      "}]},{"tag":"TEXT","id":"#p29","child":[{"body":"\n    The actual\n    function\n    application, which is performed by\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"execute_application"},{"body":",\n        \n    is accomplished in the same way as for the ordinary evaluator, except for\n    the need to manage the continuations.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":12,"eval":true,"prependLength":675,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQGZMChslAGYCuAdgMYAuAlgPYkDOhATjQLYQzxKpoCMaAJlzFy1OqCr0A+hQCGAc3kBTACZSANpIoAKMmwAOdJSQoAaUBQAWSmQoCUoAN7ZQr0EyUUiTEhOn7ZKiZdAyMTBwAyCNBrWRUQ1kMSYwoHAF4Mi2tbeQBubABfYVJKWl9JDSoKJSZZdQSklIdnN3dPb3LpOUVVSvodPUSws1AAIk1q2vVRu3yikVLxCZq6qQA3OqIlBuHm1pc3Dy8fGKU47TkqesHG8NnC4tEy0FZZAGsbZantDfUt5oOriOHVAmn62nGVRW03Mv3+c0ei06UhIslY2xuuycgLax2R3WUajBA1CyRM5lGqPRMwR2AWYl8rw+KLR23oAE9WAAjGjqAGtYEnYkQqlKUbmDnc3n3Ip0koM0CSnnqKQ0Ags9E7MmpbEC9onWLxS7XUlNGWIhUVWT0ehUeQkdEmLVNXWHfX4hSEvokobainW232x0UGkPenPAN2h0pKRK3nO8KuoHu07nY3aQ0XQIm31muzm8PiSNBmNwmxKAAe+g8NrKCZ1LTdeNTRuzWau9fz5rlT3EFRUSjI6lktQZnaTuJBFQJvWFmL9Yz0DDkJikA6HI9kDJmoAAPruca03NPPbOtPWKRsmFRZFz1DZ18PR2Ud-vD0e-DkvXPTeSxoWSDXQcny3F9uwA0BH03BlY05ZVx0bZNmzjFU1Q1bZM3Tec8wRCCoOfOh1k2csqxrW06AQnFBV8TC2yw39UnzWkIKZGwl36WRV3w0CKNFWFiKkStqyUWs6H5JsQWFUZ2JXCggI3AiSHFUA+NAMtBNIkTyJIcD5WeCph25FRZA04TRJISi9WbE8eiJc9sL-cY0S5YzTLIsDcL0pZnNcgJanRSZYKldR6EsiSTlefRtBQ1V1VU2iOwcxiCy83xDJckyeRUdkwqQkEEvqejczuXTe0Zd5Ph8kyhPcii-NZSZ6HMLL2XEvKhXPJyjOqzTzOU+qApqJrQBa0qkU-AD5JAsckuaABIfYrKnLpTzs8EkopSbuO3FKysIVKpugsp0NyycOv6KQPAIC9QF4Xbxq24CjsIgbPCG07qNBLRLqUa6NtAAR7oVR6FJ4wCWo+lNiR+v6GPMDAgeeEGVQoGgpBkzi5MfSHm1Y9G6A4rinsU7R3w-NxkeewDRU7UwyfJl4Ko0Kq3K0ut6YZimDu247Xsa2mOc5-aysOxSpAh2amIeHtxoqajYzkapg1yz6bO-ey4bGeWOKVlJQ3mVKzsAmq2Yo2ak0+grOzGy1pCXFQqjKOoceWr8z3WzXpLoB2GVWE2+ocN8hc-Gc1p9W4Ri9kgfadlUdaUYN9ZlhV7cduhVmEh2yC3DEGLaz7oaum67s8vbU99lV2KUABHLYnXNxCC++ov-sB0vxvL2OpDqSZUWoNZc+KhtASbi6W81hHmMNip6BruuyDZChWGH8KPVs71oqXyPZ9r4wF6TiCd-nmx4+DUL+mXvZXBHlMrYvxj2+BoILtPlJN+X+h89vs54nvz-H+eDWOSr8TDny3p-C2KZ0x-0Rn2aQCd9AUHZLGOee9F4fy-tZaQJAiDqHqDAgBcDmYv0VgnN+MDIFYJRLgwqbYYE230tIO8NAyBvBdicNW7tw7DApMw1hB9DZ8LeOLGg2V2E0R-u2HMEcpYGz2njIRm8c7BjakbL64JRhCOUiA1IU89oVBoPoFYqMmD425FQPudYG4LTcFRFMFRSAjmQYY4xNBTGDC5BYsG44g5CwqJ41ETBnFGNHG4sxATvGzUIciRxQTVQhK3GEjxXiZp5ycDY6+S0OErXXj+IeFJYnBNce4tgESdrRM-BEuJLjQklPMZYs2aTHAZNAHYqhocN7-U0V46pCSTHhJSR5MMhsamJNMShcR6i5Lj3ybdWBvgCDPzkqM6OkzC6-Rum3YZe1Z723iSsVZDc2mSWbhs-6k9pYsSZrIfQ+hNDZzHJNf22lzAjnkEQYMrNzIQMQmoqSNy7lUAeS+OmwcjxPN6i80AbyPkxmeWUf+lyRl9KSaUwZhFUbd1ufcyJTScQyVAKMkxoA0iEpReMuC8YonHOyVIQp+zakDIaRZWagtQAAH5GbMgBTisceMaZErcXYUFYLRWtGFIspgF0VnxElnYNlAAuLlNgeVAu8fy1k2hBVMGFWysVR4JVLIZZxWVecRX6ota4XZ3tjWHLzrIi0jCsWAuBY0oemDXYdLyRHf02K1XlO2Q9A68K3UyMoflSRRUZHzOhUweQXztKhSOavFsUi01ytpPgACjACAsHYFAOAiBkDoH4BgR1RCKBMCIFYHKFZVGqyYTQXkZwLJ1tacHTlFZFWgBqCwYIFZeFNvvJxHtVZBzVBUOYDwC8qADxUAI-R0gCB1A5NoNtjg1EAEIQ5VprWu2YoBZRXOZABbQfMhrNVEeycwxg1j1qhp1TEpA1AAXFHq1o56pWXuyjekgd6KkVCfdHKQp6CD3vaatDeBAKRAZfalBdQaRaftCmBico9pkbOg3Mipk0Iaod+ehmG2gsNbLkYhpEgk-1BDoMrfDNK0qnOulhi5R7DZ43lmWEIJgXQEYfRojjxFlJLmqOEAD0gBN-G2GWcDnrIPCjLBSCTWwEMKiU2xOgImdDSbQ9-NMbZpMMPEHvdQNBbQkHjbe6j0YnS3pkycdMtmcNGtzZq2zOnmyZkcw8AlVhyyJCQZRtYVngwkpUjQ-Iydnh4xc5qFCw0yw-Po6AAIQRoqUpCvxSTiKyPA38ifdLKG8tX0ySmzMMWlAxvK0RLLxGitOEWim9M5XDO+ErCJtQlmWDWZ0HFzLw0uTWnLH+uzaVjDyCsGl4KECMikvvOZibvxP5ss5Sl4I0W8uTeVPFldwqRqDcC-K4OSq5vjcsJt3kECAA8oIxsLZ28tntTA+0QlRjQRmJB2SxveWfRURA-WqCVaMUAABqdtlrFSVosfIKgBAcpxYcKD5SQPQfvo-P0a85mYc5UW-mbtva3EvabYQJQAB3L7sLQG-f+yoQHIOweWvR1DrH52QoI7GBSOnqOjyM8x7Dn4O2WugibW8P7QVlTVa2Cz39d6JwQVvRoJtUU3O-NaIfbOFletqR2xOBmDbqF4JZ0t8HHKe1-oV4Y7QxnTNQ8C8Ft+tnDvg6VShElmRMzw6560TlmYcee7cM79Xab4fmHTDj+4DMigMxh6AS3f7Xekt84JfzyDOs0Z43q-HwQUIFJIDyZ9KlWShgjz2kKSgdfkwJeV0LkqLrldj-+vVn16CB6q3F2rrJdXG-BXliXIl2-oilhHnEkeU3y5MxbrzrG9rFkAjFTj2etfqGl6ouXZvx9K+G+X1wavOKG766o3X9jsE0MN47y1nKx+K9j0Oa35nbddeVg7v3rhnfpfj6mj3xvOWzzkj7ldmWz8LUA9d9oECtdtQ8Bd8hi96Zo96939E8EEAtU9usD9yZM8pcxhSA89o4C90RQAABafA6FWsEsEwIvcmAoEvWeLfI8SvPLavZzDbLzMFJvFvHvNvZrc1LvZgVkXvQrDvcPCg4fJLS-CfYbTNMAbNZgNgDgQtbgEtNAFActZEasKgVgR2AeEDVKYjUgEbEOOTc8EQCkVQ9Q-uMUGNEwjQmwNQu5MhEwbxEQPQq2Rw7sAlSwswrQsqRgWbc8MmKSQ0ZSNwQ0UVTvD8KSY0QI1wY0EIrgtwKSVbSI5LQIJgGIvwzqYkRI4kVI8mKSCoHBPBZSPImhIWUIg1TqB2egO5WQdkZSCoqoz7TmUo8VTqTPSIzPMFJouIzqV4KwbuLkegcUHoywPoxgBmTo1wKSYHRItwNdcwVqElAAPlAArDpwaPGKmQhHwOmNcFmNAHmLSCWJWKILWNiImM6nwMKUiJWNaAOLcCIOuPWKkgACptiY8B09j0hDjQAni9jXBHjOpgBXjdj9iviwATi0iNEABSIE94kE5Y0ASE340Af4jRGbaY4Ez4+EmbD404jY0YTdDIdE2EzElYgk0lVqXEqSS7GEuYkk0Aa7VwCkiEnQUYS7NIbYjExY+EtkxklElkhYmkj4rklYpY3kykzqBY9k8wI8Tk24kU0lHE5kiETdV4+Em40U0AbdVwOtMme4Nw68Uw2dGwSaOLElHESKDMH+cwdwo0zwpERFfUtQqwu0mCGgLkAAK3HW8PNJuR0N8FuPiINKsOUmcN0PzFxOSyDI8OzXuGwEdMNM0Ixkpx8PBCkmfV+gsVUGUnTMWWSBUHWO4LKI0UgBIFzKqBqOlJLLLKQQLMLK6I0SGKkFgEgEiMbObNrLrLxMbIAFFEieyOy6ypIAA5WQIc14kcocwAzs1oPUgmCgSMp0jwpM4BArM01oC0sgLkzMMgXbG0xMuczGB0uchchM9TZcTGPgtctwDcrcyNNsHc3cqM205cxFSLIsbFZBPc407Qowr7YkPQnlZBCxOlaOGodQdkG3d02QDYZva8RBUmfVL8qQGw+8YMBw3QiM8mN5f83II8JFHZdofQe-NPJ0PQtrYwDrKjB-N+AFCis9J8zQk0grTC6ctwJC5csXC7Ac43Wi1ZJCyaN0z0ygYaZ-Y3dig81cBLbi8HBA5PYilA2kHzbIeQEzAbFUZAkLUlH-UXDSt+WMrNVKHNPNWQrgYtTAHAN85EZyBCD8JLThMOG6UYVVV1JSSIaINlPIzVCFMybSa2UAKIenBmGKNCGmby2qFle1d-Jy7kUYCpZydGSwGgIFPvZNFNN5BNBFTsPRcaTiOodkAAL0+ChG+FSval8HrwlCIDIAXlUHMGXSuE+K53oCqpqviC+FWE41mjquzEF1yvAsKpOlKrUQqt+2qqUFqsIB6sWPfWarGtUG0HHxFyIrn2IhZ1ikGrNVEsLNsxYuDnqr5GyoVD6oKsqm6gytDSxF+TcM3FYG8NBBZk-U4pCiyvxWPK5BEFC2OsKoWpZglntSgJTRGtmtau6oaumtFWBvGviGi20IGn61-J2q2smoasOojFRH6pPlQXIHQQoES1V0NiPhSBvDwRylkGalQLKpj1vUqrmsnWRr5C5L91kBGtEvwEhptFAGEwsSIDBkIDcU5rqE0HM1AAABIAAdaoCsCgaWxwWQAoEW0S7QEyBTemwGcGrvOWd0XvJW3vKci1b-FqqGnWlW-awGJGpVLkIGw2ia026Sj8LNbMbwMvLmnBXmggfm7OPBKHUWiWtrGWuWhW43fawQ1wEfbfQ2dfYjZzUgKdESOSEQPG8mPXfI+oIBTwo3MVTlGveO0gLnY7K-QmkwYm8CqOqVHOkgcwTMNOhO8MpGiwNsau0gT+EOw9V65cYWO6i0r6pQCUcBFu5Ok-GuwK8mC-OPW4nMzMlQbtSOsrJu8AtsGu3q9Gk60WXFd1CcAlF3UlHmQiCZalVoAlNYD60lbu7QHewCdSENCK91fulMK22m0Ghm2499I+0gCq5-fnJfVWzElXS1GfJ67WhfX4ZfAGrvJva2+ICevMx+rZcHAoXa8mYO1GosZegamfZWIazet-E+kg7rJ6l6g+481+-06FVB7YdB0sASK+62UB4a6m0akG+mxq0VYh9+8HT+mBn+sVfAJ43gJ4uuglXkNQMsULRa0XFayTKXOu1isFZg7g-+iRyXIBuoEBuu8B2mjh6RsVbQLh1oHhgQfhmRsVBR9LQB9LBBox7goR3vcwLRyxhmOR+xzmT6U2nR2hpx0OlusVeB5-JB-CnKsh-GaONOdGmyvCwh9u-QY+0hvK76zudOFUTOf1QeaNWhglMgaJ0++J9GoJwu7hbUQfNwAlWQTJshrjGOBJ7udQXuUCAeGhpLe+xh4O9W4OKJt+6m5-Nmw2jml2nm4GfmpQOEUCYW3zSM1QZJ4e0VfAVGQlLkS4XwcWyW6WigRwTOMWsgSwEcAAA173lo-szhse-pactWnF3UsBygOe0y2s5Qyfab-RpqaezDNq7yVRKbubWAeahs4YsaPAdquCds5o025rdoGaGeoBGesDGazhzjmhaV8Z6uQd8Gb04lVGrVXoZCTTxSyWRELoXk7Ae1kGqo+VwRziVtuQop+aFhTspc5gtORcAhoDRfPqajsbcFxZPlITPmtj1qPCVX7GJjXpkQe2FHPvwclm7RTsRamXWscVwfmvh3cxBDpewaWNGCeNlcDDzJeIlDAKle7vFhM1YVOgJRalCyERETEX3qKePMNZXVC3pdRaxgFYxe0FGjSePI1ajFUDuuhjQk9ftHmttdZ3dfbvetIE+rKbdYafochptqmoOPfTDYsnIuA10qdCDeGn9bzOGkRvB1jbpvhZRv8aOsCe1k5bfkwePKYFKdie2Hlmoclloc+kaa+aYeOecZEDYctQ4aOYTa73ze0HYy1s41+F21tppe3wReLeeGUDkjeVCjeYYGl0+bjbBo3XCZTSKIN0XYzs5gNo0epaYe7UzB3bsC7brK6bGp6aBddv6ZSKsEkB9qWf9pED2enKVrjU4fbcLNne7jjVCnTFPYneNw6Y8b0bAHZsYF6ZBaYFZaFnwGnW8FtAHgFrwQsDe0Wb9pWdnfWc2aYB2fnbfbA52PncfoRm-Y8YHdWw-fkFeX-bto8f2oRmA-B3Hbsb8anwCdredV5SsSxetfboIBrYxr9Iowbf+rbv6GhQTtCy7rIbo4s0hUysbejfuYYdbeab7bBSE-eeA79K-a0-B1-fnaVoTtscsdA6MZo+GiY+YfscrEHGrRVT9Rcv07g87NI8meI+DnzZY8Y+zGY-c+-uA6QdaU45Le4+ssrfbtuYYFk99O7teW5ASqSoXkxZvqbbvpjYgcfp-q5wgkrWQWSClt0ESuSsTstQHoNw2dS5Eh5a-3pp0dZaVW3LK7S7Pcs+8+5xy6C9FR0Yo664sDiWK50Cwja7q8KdFTDpYKgWG7a10BrvcY-AKD1bKaGr13aukV2AJcCc2-xaO0-BplZQ7RiYxo2vdW7StG5H26Fk5X1ai7zku+kGcsFe25O-u5c9e4Kae+NX6WSWZRu73dO5Oq1XJSZTBhkDRhe9SRvp++yedmO9u+B4Gvh62++4O4MhZnE4u-e926x6U4uvR6Fj5ekHZcB4Zju8CbJ-ZYVmURSHS+jR+8UUR6B-1eZ8e4x-Ey1p0XJ5HuR5sDLbp-rg5+J4mm5mdb4-dThdx9rdE5gkfEh9ydkimmth+-Pt54-Ep+4-V5Z4ZhJ+7lwYwZF9Z8CYoeF5x9F-QK6VIDeBIBoBJyRfZHsKOKIO7qTksuhW5EGYR81my4frbfXYa0pqybzhbdXYOunfEGztjF5GrTrAsX0GrQAq99+DPRHFnghA3WRwkBIET-nMR0PRmBY8TxUrdL9iopIrMEVuAZUjayqZqbMMxOAcVsxKgdUF6rwRj7+BdYT6T4nHvHnPoFj4xdC0lbmhxAggsRqZVEjt75GCOCCQpokAIBjzn6ioX5qKX+xdxCCTcfpkoKUFLxoO3+cm9-qD8gz9GCz7pzX4L4KCL+kZL9UvL6C2ovJGkfwFP9+HU5tGkZ7ZG-r41BLEA8PLjIyH7d8EUoWajjX3AFx8CYXjQsqrG4w+BVgkdUYBv2UgACe4QA2phViW6WofGF7MAF-zqD00naf-VvqBVzKqA66CA0OsIVaBT8cBM-K-Fzjn6Ut+utxX+qKjqLDgcoowfAEwJQHqBHsfacglN1vrNgPAA8KVGyGH4IpXCx5YgJ3wv41BQsQOQbkLDFoe8PAtcIINsH0DFZNB5MbQdv23T6ATc1lBwEqgADk4AUCPQEWSqA2gegjwDYNwp1ltBlBYwUY20EsQE4XIGoNoChCsBzA66HwW4FMGbtj8BuNtBEI-BRDNeYWNDvELBSJDeWEgJWO-kzBxCIh6QpIdcVSHBx8hGQ9EF72CAhCQ8bYOtAemI5eCihnZbQQP1ACkBVBKgUfuFgaGtA-BhsVQVIBJxuJ4gAwpgGHCMFgd0hugogPoO0Dbot29QVoen3b61C6hdiVwdsFmExD6gZQwIcEEzALDZB+ZKoR2GGGjCuwHgyIZJ3nLu1n0-QwYaFj2G59Fh+Zc4b4JxD7DZ47QhPG2HeHt8Xh3nCYXxh0CZgTh3oMdoy2AwnDlh3BeoV0OhFxljywkQwLaBH4pkdANgxETYPMA2D3aTATEaABsGow8R+IixHiJsFch2QpIknFUEsA2CD0PQvaH0MRHW4K4UgfQJYFqAZ8xh05AEc2GFDoiPA+gfAmyI5FKAiRg3EoULD6EnD6KSgJESE0-jSlWKEozmH0Lt6kBWR7IwbDoyhGvDvBsI43NoIJRqi4uqI7QDYONGkj+gRAAcCYFJHVg1QWkNxKSIeTOjhwNoWkR4MNFEMag-RURueBsEyCuQlorwA7BEikj7wlAJ2vQFJFnBcalo+8LKOjF0jeuxgr0e3RHDUAhwIkP0eCBsEZigU94Ukb5lJGyAPRjQj3n0NtCJB7wKIcERqJFH9dA+ljHkSclzFVjbC+BY0UKM1GzwxRzYz3FKMGEftMx94BUR42VEMxBxIw7QMaObp-D+xeo-UZanpHjRVRdY4UVqK5HjCJ+bGaooEI0jtYZx64nsRVnqyvDD8zYaysaPrGDZFR-w0Sq8HZD7iU2bVf0V2I3G9i7xYqCcZ2WvEfie65YsDoyIFHMiu4-47UUxG6HD4lx+qFsRFD3EkRDxlYlCjYD-EnjtR844oYUBgng4VxCoSsSkDQSNj4hcEhjG2MInY0+xmgn8R+DXHqjwJu2ccQOMWHrAfRN4zkTqJkYwicJsEisSxMDHsTtgW4pifjXkQISDxdFASf+OElwiLxIIaylJJPFfjtxxuR8c+Klp0U+RgY7sSKKomioaJhZRSSKOUm4SUxrgYCbKNAmVMGJZwqCa0AKCwseJoAUiYzCfGIS6KU4+IIGLnFKjsJTk78XxNkHIVc+1aYISFIbA+D0hPwz4Tnzz6YS8hlwxUCkCgEsTZ43GbGm43vF6g1hwQzYdoGimQTxRSWNKRQHikNDuJ-k4OLFWUKjpHO1QHjv6jrC-lPOvnAPnZX8AMVvyZUP0vVzcD7tWqZLO5J+U6kukmpMdL7AqKRrB04eoQG4aBl0JecvcwsCjHhl0IIULUL4+SsrCmkHRkMPUvzhNIOlPIK+3WHqQxx2ItQfozVapgZyWKiUB2mtPENrUuk1hcEOoODpyjUxBNNMrrK9FdLem9SncLQqgZPQOkfg2OlqaaQd3QK-lRgNvO3g72WkKgkERiAgrVLIBOcGpLld3usmui4yFqjGAmWPA2T4zBaXfOAQwB0IqDFhKRFHBoMqlaDsAfQufkTLRHFisRVom0RQEpHUiix1gZ0VuD0kJDsANg+gAmP0DRisRJIrEezPxEbh3RhUsDg-waEAAGc6V3kBhgyjwms5-DrM5glwgAA","body":"function execute_application(fun, args, succeed, fail) {\n    return is_primitive_function(fun)\n           ? succeed(apply_primitive_function(fun, args),\n                     fail)\n           : is_compound_function(fun) \n           ? function_body(fun)(\n                 extend_environment(\n                     function_parameters(fun),\n                     args,\n                     function_environment(fun)),\n                 (body_result, fail2) => \n                   succeed(is_return_value(body_result) \n                           ? return_value_content(body_result)\n                           : undefined,\n                           fail2),\n                 fail)\n           : error(fun, \"unknown function type - execute_application\");\n} "}]},{"tag":"SUBHEADING","id":"#h8","child":[{"body":"Evaluating ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" expressions","tag":"#text"}]},{"tag":"TEXT","id":"#p30","child":[{"body":"\n    The ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":"syntactic\n    form is the key element in the nondeterministic language.  Here we see the\n    essence of the interpretation process and the reason for keeping track of\n    the continuations.  The execution\n    function\n    for ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" defines a loop\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"try_next"},{"body":"\n    that cycles through the execution\n    functions\n    for all the possible values of the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":"\n    expression.  Each execution\n    function\n    is called with a\n    \n    failure continuation that will try the next one.  When\n    there are no more alternatives to try, the entire\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" expression fails.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":13,"eval":true,"prependLength":679,"program":"chap=4&prgrm=","body":"function analyze_amb(component) {\n    const cfuns = map(analyze, amb_choices(component));\n    return (env, succeed, fail) => {\n               function try_next(choices) {\n                   return is_null(choices)\n                          ? fail()\n                          : head(choices)(env,\n                                          succeed,\n                                          () =>\n                                            try_next(tail(choices)));\n               }\n               return try_next(cfuns);\n           };\n} "}]},{"tag":"SUBHEADING","id":"#h9","child":[{"body":"Driver loop","tag":"#text"}]},{"tag":"TEXT","id":"#p31","child":[{"body":"\n    The driver loop for the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator is\n    complex, due to the mechanism that permits the user to retry in evaluating\n    a program.\n    The driver uses a\n    function\n    called\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"internal_loop"},{"body":",\n      \n    which takes as argument a\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":".\n      \n    The intent is that calling\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n    should go on to the next untried alternative in the nondeterministic\n    evaluation.\n    The function\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"internal_loop"},{"body":"\n    either calls\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n    in response to the user typing\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n    at the driver loop, or else starts a new evaluation by calling\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"ambeval"},{"body":".  \n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p32","child":[{"body":"\n    The failure continuation for this call to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"ambeval"},{"body":"\n    informs the user that there are no more values and re-invokes the driver\n    loop.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p33","child":[{"body":"\n    The success continuation for the call to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"ambeval"},{"body":"\n    is more subtle.  We print the obtained value and then\n    \n\treinvoke the internal loop\n      \n    with a\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"function\n    that will be able to try the next alternative.  This\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"next_alternative"},{"body":"function\n    is the second argument that was passed to the success continuation.\n    Ordinarily, we think of this second argument as a failure continuation to\n    be used if the current evaluation branch later fails.  In this case,\n    however, we have completed a successful evaluation, so we can invoke the\n    \"failure\" alternative branch in order to search for additional\n    successful evaluations.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":14,"eval":true,"prependLength":616,"program":"chap=4&prgrm=","body":"const input_prompt = \"amb-evaluate input:\";\nconst output_prompt =  \"amb-evaluate value:\";\n\nfunction driver_loop(env) {\n    function internal_loop(retry) {\n        const input = user_read(input_prompt);\n        if (input === \"retry\") {\n            return retry();\n        } else {\n            display(\"Starting a new problem\");\n            const program = parse(input);\n            const locals = scan_out_declarations(program);\n            const unassigneds = list_of_unassigned(locals);\n            const program_env = extend_environment(\n                                    locals, unassigneds, env);\n            return ambeval(\n                       program,  \n                       program_env,\n                       // ambeval success\n                       (val, next_alternative) => {\n                           user_print(output_prompt, val);\n                           return internal_loop(next_alternative);\n                       },\n                       // ambeval failure\n                       () => {\n                           display(\"There are no more values of\");\n                           display(input);\n                           return driver_loop(env);\n                       });\n        }\n    }\n    return internal_loop(() => {\n                             display(\"There is no current problem\");\n                             return driver_loop(env);\n                         });\n} "},{"body":"\n    The initial call to\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"internal_loop"},{"body":"\n    uses a\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"function\n    that complains that there is no current problem and restarts the driver loop.\n    This is the behavior that will happen if the user types\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"retry"},{"body":"\n    when there is no evaluation in progress.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p34","child":[{"body":"\n\tWe start the driver loop as usual, by setting up the global environment\n\tand passing it as enclosing environment for the first iteration of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"driver_loop"},{"body":".\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":15,"eval":false,"body":"const the_global_environment = setup_environment();\ndriver_loop(the_global_environment);"}]},{"tag":"EXERCISE","title":"Exercise 4.48","id":"#ex-4.48","child":[{"body":"\n    Implement a new\n    syntactic\n    form ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"ramb"},{"body":" that is like\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" except that it searches alternatives in a\n    random order, rather than from left to right.  Show how this can help with\n    Alyssa's problem in exercise ","tag":"#text"},{"tag":"REF","body":"4.47","href":"/sicpjs/4.3.2#ex-4.47"},{"body":".\n    ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 4.49","id":"#ex-4.49","child":[{"body":"\n\tChange the implementation of assignment so that it\n      \n    is not undone upon failure. For example, we can choose two distinct\n    elements from a list and count the number of trials required to make a\n    successful choice as follows:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":16,"eval":false,"body":"let count = 0;\n\nlet x = an_element_of(\"a\", \"b\", \"c\");\nlet y = an_element_of(\"a\", \"b\", \"c\");\ncount = count + 1;\nrequire(x !== y);\nlist(x, y, count);","output":"Starting a new problem\namb-evaluate value:\n[\"a\", [\"b\", [2, null]]]"},{"tag":"SNIPPET","latex":false,"id":17,"eval":false,"body":"retry","output":"amb-evaluate value:\n[\"a\", [\"c\", [3, null]]]"},{"body":"\n\tWhat values would have been displayed if we had used\n\tthe original meaning of assignment rather than\n\tpermanent assignment?\n      ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 4.50","id":"#ex-4.50","child":[{"body":"\n\tWe shall horribly abuse the syntax for conditional statements, by\n\timplementing a construct of the following form: \n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nif (evaluation_succeeds_take) { $statement$ } else { $alternative$ }\n\t  "},{"body":"\n\tThe construct permits the user to catch the failure of a\n\tstatement. It evaluates the statement as usual and returns\n\tas usual if the evaluation succeeds. If the evaluation fails,\n\thowever, the given alternative statement \n\tis evaluated, as in the following example:\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":18,"eval":false,"body":"if (evaluation_succeeds_take) {\n    const x = an_element_of(list(1, 3, 5));\n    require(is_even(x));\n    x;\n} else {\n    \"all odd\";\n}","output":"Starting a new problem\namb-evaluate value:\n\"all odd\""},{"tag":"SNIPPET","latex":false,"id":19,"eval":false,"body":"if (evaluation_succeeds_take) {\n    const x = an_element_of(list(1, 3, 5, 8));\n    require(is_even(x));\n    x;\n} else {\n    \"all odd\";\n}","output":"Starting a new problem\namb-evaluate value:\n8"},{"body":"\n\tImplement this construct by extending the\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":"\n\tevaluator. Hint: Exercise ","tag":"#text"},{"tag":"REF","body":"4.24","href":"/sicpjs/4.2.1#ex-4.24"},{"body":" shows\n\thow to abuse the existing JavaScript syntax in order to implement\n\ta new syntactic form.\n      ","tag":"#text"}]},{"tag":"EXERCISE","title":"Exercise 4.51","id":"#ex-4.51","child":[{"body":"\n    With\n    \n\tthe new kind of assignment\n      \n    as described in exercise ","tag":"#text"},{"tag":"REF","body":"4.49","href":"/sicpjs/4.3.3#ex-4.49"},{"body":" and\n    \n\tthe construct\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nif (evaluation_succeeds_take) { $\\ldots$ } else { $\\ldots$ }\n      "},{"body":"\n    as in exercise ","tag":"#text"},{"tag":"REF","body":"4.50","href":"/sicpjs/4.3.3#ex-4.50"},{"body":", what will be the result of\n    evaluating\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":20,"eval":false,"body":"let pairs = null;      \nif (evaluation_succeeds_take) {\n    const p = prime_sum_pair(list(1, 3, 5, 8), list(20, 35, 110));\n    pairs = pair(p, pairs); // using permanent assignment\n    amb();\n} else {\n    pairs;\n}"}]},{"tag":"EXERCISE","title":"Exercise 4.52","id":"#ex-4.52","child":[{"body":"\n    If we had not realized that\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"require"},{"body":" could be\n    implemented as an ordinary\n    function\n    that uses ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":", to be defined by the user as\n    part of a nondeterministic program, we would have had to implement it\n    as a \n    syntactic\n    form. This would require syntax\n    functions","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":21,"eval":false,"body":"function is_require(component) {\n    return is_tagged_list(component, \"require\");\n}\nfunction require_predicate(component) {\n    return head(tail(component));\n}"},{"body":"\n    and a new clause in the dispatch in ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze"},{"tag":"SNIPPET","latex":false,"id":22,"eval":false,"body":": is_require(component)\n? analyze_require(component)"},{"body":"\n    as well the\n    function","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze_require"},{"body":"\n    that handles ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"require"},{"body":"\n    expressions.  Complete the following definition of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"analyze_require"},{"body":".\n      ","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction analyze_require(component) {\n    const pfun = analyze(require_predicate(component));\n    return (env, succeed, fail) =>\n             pfun(env,\n                  (pred_value, fail2) =>\n                    $\\langle{}$??$\\rangle$\n                    ? $\\langle{}$??$\\rangle$\n                    : succeed(\"ok\", fail2),\n                  fail);\n}\n      "}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/4.3.3#footnote-link-1","child":[{"body":"We chose to\n    implement the lazy evaluator in\n    section ","tag":"#text"},{"tag":"REF","body":"4.2","href":"/sicpjs/4.2"},{"body":" as a modification of the\n    ordinary metacircular evaluator of\n    section ","tag":"#text"},{"tag":"REF","body":"4.1.1","href":"/sicpjs/4.1.1"},{"body":".  In contrast, we will\n    base the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" evaluator on the analyzing\n    evaluator of section ","tag":"#text"},{"tag":"REF","body":"4.1.7","href":"/sicpjs/4.1.7"},{"body":", because\n    the execution\n    functions\n    in that evaluator provide a convenient framework for implementing\n    backtracking.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/4.3.3#footnote-link-2","child":[{"body":"To avoid confusion, we shall\n\trefrain from declaring ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"amb"},{"body":" as a\n\tname in our nondeterministic programs.","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-3","count":3,"href":"/sicpjs/4.3.3#footnote-link-3","child":[{"body":"We\n    \n\tdidn't worry about undoing declarations, since we assume that a\n\tname can't be used prior to the evaluation of its declaration,\n\t\n\tso its previous value doesn't matter.\n      ","tag":"#text"}]}]