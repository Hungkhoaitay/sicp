[{"id":"/sicpjs/5.1.2","tag":"TITLE","body":"5.1.2  \n    Abstraction in Machine Design"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    We will often define a machine to include \"primitive\"\n    operations that are actually very complex.  For example, in\n    sections ","tag":"#text"},{"tag":"REF","body":"5.4","href":"/sicpjs/5.4"},{"body":" and ","tag":"#text"},{"tag":"REF","body":"5.5","href":"/sicpjs/5.5"},{"body":"\n    we will treat\n    JavaScript's\n    environment manipulations as primitive.  Such abstraction is valuable\n    because it allows us to ignore the details of parts of a machine so that we\n    can concentrate on other aspects of the design.  The fact that we have\n    swept a lot of complexity under the rug, however, does not mean that a\n    machine design is unrealistic.  We can always replace the complex\n    \"primitives\" by simpler primitive operations.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    Consider the GCD machine. The machine has an instruction that computes\n    the remainder of the contents of registers ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"a"},{"body":"\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"b"},{"body":" and assigns the result to register\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"t"},{"body":".  If we want to construct the GCD machine\n    without using a primitive remainder operation, we must specify how to\n    compute remainders in terms of simpler operations, such as subtraction.\n    Indeed, we can write a \n    JavaScript function\n    that finds remainders in this way:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":0,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQEY0CYBQuAzAVwDsBjAFwEsB7E0AJwFMBbAQypIBMmGAKEgBpQXAJSgA3rlAzGTCkQb16AHhHTZmgPygSGzTIBcc9px796AWhHCxAblwBffM1PdefbAE5hKUXaA","body":"function remainder(n, d) {\n    return n < d\n        ? n\n        : remainder(n - d, d);\n} "},{"body":"\n\n    We can thus replace the remainder operation in the GCD machine's\n    data paths with a subtraction operation and a comparison test.\n    Figure ","tag":"#text"},{"tag":"REF","body":"5.5","href":"/sicpjs/5.1.2#fig-5.5"},{"body":" shows the data paths and\n    controller for the elaborated machine. The instruction\n    ","tag":"#text"},{"tag":"FIGURE","scale":"30%","src":"img_original/Fig5.5b.std.svg","id":"#fig-5.5","captionHref":"/sicpjs/5.1.2#fig-5.5","captionName":"Figure 5.5 ","captionBody":[{"body":"\n\tData paths and controller for the elaborated GCD  machine.\n      ","tag":"#text"}]},{"tag":"SNIPPET","latex":false,"id":2,"eval":false,"body":"assign(\"t\", list(op(\"rem\"), reg(\"a\"), reg(\"b\")))"},{"body":"\n    in the GCD controller definition is replaced by a sequence of\n    instructions that contains a loop, as shown in\n    figure ","tag":"#text"},{"tag":"REF","body":"5.6","href":"/sicpjs/5.1.2#fig-5.6"},{"body":".\n    ","tag":"#text"},{"tag":"FIGURE","snippet":{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":469,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQEY0CYBQuAzAVwDsBjAFwEsB7E0MuigJxoBs2BTZgCgGdOARyKdynAJSgA3gEhcoBaGacKRZvTZU+FHgCJGJFuy7NdAGlADhoshIDcuAL6FSlWvQNGO3APpWRYjyerN7MklLyisqq6qAAFpwAhgAmPBSJVGxBTCEm4uIOzi7k1HSgAOYqPsrlWhTcPAC2iWRxVCScFjU+JImNEtKRCtFq9M2t7Zx6lRTVnLXa3LriPN29-QVO+MQl7qAUAJ4ADlPt2sxEbnThSiqj8UmpZyyXpSQFoEU7Vxo0NADWRCOPiOzCojX4B0aACN2BYaCdmIk3nxwkMGHRtKAAG6JNigAC8oESfD4NDIkJhcNACO4yPcqIciluMXoWh8pGSnAIk1SuLY4nRzMUAH5QNxWLw+FDYWwLLpSP8SDQAO70WlIt6gAC02uJpM4MK4yyFwtAAC4Hik0hksvz8oVtq4tWw-oDgWxEtDOFlPd62HwLH6fT0+gMIsyDFj+YT9WSKcG2KH+kGvT7GeiRrF2ZzubyePbTcKxRKaLxE8nOqAFSQuTyOslQImdXqSQIjZwTWbhZb0pkC3jNl9nXtmv9OCCwY0qNRsRPOAAPYHcniLo4WcZtDqp-2owbMqgEUA8dlR9KGHxr1dL-L77tnhixs+JC9rnz8kTXo6bbss+48SQCQAPgYJlFEccUA04UBD2PdkKyvNdbwje9MQoGCSG0PhY1dAEgR8RMeETQMmzTJM30IpCf27LN6AAwkQOePgwIUCD02g2CTz4OYFnqZhLyXL9kKLDFMPQ5hYxmHi6gaTdJi6eYZP4t8aiE6izVo49AJAqTPFECg+FWD50TYqC7zNUteDXeVFWVNVxSXZRST2Q4ThbONDWhY11M+LZih+UAxwnDV6ToATlwIL8NxaLcq2I+FEVCzC0UjNCaSOHC3Xw0FwR4EK3nCnwESEhK6RRHyH0SHZsKJZojlXBjAsScdJ3BGcqDnQqVyrOTt1I3dxDMETfzNfL3EKkLa0MqiWL-WJ6OA4kjiONgDh8doOVrbhVvacofAAK0SXE+DIMEjh0YaRsUBFovqo9FsiwbiWqh0-O+LU2yocoSFWRTFn49YqzJNRbBSqI7liTRtD0T7vvMW5eN8QGLGB5hQcdd69lhkgeMrHhsfWsSLh+MHhgh+gEmtPssgJ55ibeV7nExsoCY-edBNponXncG5M3Jq1Umpm1+0585ueuRmnV2Mogp8AmV2eaKJj6+L0rKhkLCOMhSdErF0mYGZJKqGolKaGL5LjL6cbWMMTzE17UrEnE8REcLY1Zl32fq54KrStmfB2QkRPZMawqvf2kJEsVZdDnG3xXCOlyV2Kd3TUrNQZQVf0tWWcunWcvcvSLE-XJrlbisiM2ZTSFpAlCrsUARZj0wxDP1mYLH9nYAJ8huUlxMQQQpLXjIbxxHX8j7kgH2wh54EfzMsKoW4M+eyAsIXdKYfTDJHh1QDekcZeaid6m0Iu7e0ZOLdV2OSIIT1yk17XF4fAxknasoiTP5u6A-t5L4UB8pxEOiUCpXnfp-d4OtHZYkgQVQOtUT5FTAeNeOkVLoNywaJf+7hr59Uwdgq6t9UGYl7uDVkWlGr1yIQoJuPgV6GQfokJ+OCoEB1ID3WatD+4vlnlrNeo8iHjxMpBAQi9mSWUAfKaEKR9icCxHTcW9BdQeQ7MsWazhhzS3oD-bItYoE3E0lDHQugf7w3gTzOwvlma6IUb-AxACf6EzFiTRemlKaC1tGkexLiXgk2MtogKstoRInIHEC+isy4p36mnUAzDWELxoQ+LkWIiShL4RE1JOgfazRAdxBCglsnCV-A+JimU8IejIkRSuqdyJLgItU4p5CyaUNrhIohnEt6GB3jwBJJTaHdnoYwteFgmItKwaZcRNDBmKF4YPARI9uHCMIeBTRYjoIzMUFIqJuhZGNgyeEjCritSqLbJ5bymjD46NAIc1oNT-RGP5iYvQdy4jw0TB8JmR96BvJ8NkngfylFuJoR4x4wsshAq5gE6x1yArsnSOUSoyQCJ1GyI0I4dB9IbwSD4RFOtNLsiOBkXgjAMVYsMJIAAZFSgW6LMUdEpYSAk39cWIonrYhGPBAZPMoS83QNR4Y8usd8m57ITb-XCkJaQc02TcURci1F0NrLVkFV8yeewJV8UKqpJCMqwVU28TNXyGqyjPkMAONgIheX3H5eaig8M2bqs5aeNCL5ZiIRvO4-mCKWGKpeSq-QbrDAaK2Jy+1hU2bSqkLKulQtjVBJdNUnl+rnlot0ImIVYZnU-JggUsiUq9UxsJfKv1nAUUBqTtWTNOabmFKqf6aNsbPEQrUiKqWAViopuLWm6GugERZo2O2l13FY6Fq9aCn13FiVUCsl6mlea8VlorWiltSF5QDqHKa9UpC44NOKgicKNrYgtqFi2w9VFa2dt3RNRKU08rLgnbGoWF6bztu3U1Fq5QaB4p-QrMS+CK67mfjrFJ9jJI-ooD+gFuT0T5Maf6KVzSOkKDKWJGqTYsoNp9A8uJ9aEM4eacs1p-5tJLwcfUVuozjkGR8lMjiR4uLSUlVeZDWzUNpRqEbWYWrZLmz6rx5SDTVJEZEjXMjwzt5Ua1hYbplHV41AduBDZKHxTMElNI6s+yKiQZoDR+mewzkGnUXRuFWpv2-twwKVNfL00Wagx8siV7zO6f+fYng9mf3AoZjKvmlDT3eM834gzEtYWJr2Ji+q2gWj-AJfzaLZB-h6Ei6G0VAUjhED4HEfg6REud09nFyhCWku6Ay1l5YlrrUctzbLPgR15yRSib1IGuX-ggdfpx+Y3HmN8TNuXFGrW-G40BoApTJH5pkfY7+Mr2XiuyeXlJhT8wxtYPmfw4e2tiPMhEWlrUssnJQeUJEgD0SLZzdAEk9ED4uNEikoJvrMTitDZtv0UbPlxPUNWXQhbPSqM1E1sVYrK2+7Tz4RORZm2D5j2qzcurc5frlGPRodNcPOwKUR8O3NB2yxTEUzZ216bsfKHhopzHsPBvPGG7bJ73mebev8+CoWNPoUMy3R+3O3ACBlkaMdq+p2Va1LVhnTE7XklpRaFqIkiIufMB5xL9wo28mMdAerMOHMAmqcqj8Dh9AkEtTHeg-GPxANDVmWbohJDVfJS2x9xaMavvCnl2FbuQjZlrfBxt13kz1nsVUzsk7ey5HS+5-p5R7lzkmaueFsowfZdG58z22zfbY+NHhk794ZP0uc+53LH489s+y+C8owr9wAv9hT0XmFZnRzIMXJwMgRAEE-M06rZrFgHdm5k-Ex+A2YsJT3JOyhrlTj22ZUSXQ2NdCYOjsg+WjWTtt9iQGfvIHMG9mOCP7QgEWXVnMdPz9p9fH-r54vkh98e8Xe1mv-YG-Rtj602E1oU+G4z5an84-FATdL-Pyw1fDd18nB34srj6ebP5XSv4ThBYf5f6qwjzX7D5AE766Co5gEjQQF+D1a86f784tZ96X5ZxXQAGb5AL34Cr2I46oG-joFE4NaaaL7nZwH-436AE+ykEzY+DNDMDjj8RQZ+CtaUHdjoHsGcHcG-p8ExYXz0GtZ-6EHMHEHb7j7KBzjMCzBPa8EiFLD777acDKGqGDbqGJBcG+ArhSF4GMGyEIGsHAHVgp4CFmhCEF487QE4F1IkQIgkTmEjSWj+5841hKiqhsgs4uQb7h7GZeSdhs6cqyzPCAIMI5DGC+C07XD073Azq8CU7BAJH8RJEkAWAkBEAcBboupiRxGGC5CJFBF0B36D6l7gqwa7Z7CU514N5N4-SsE1GxBCz1Efr0JNELj16N7jTdxRI7A6z0JdEnajEw4BRAjJDIgThMSAIkSt78bhhXZpRazdb3aL6lZkChqwLoQJJbF-S9Y7EJL7GKAPjFaxjNZ6DFYXEcZOzuE3GrF6B3wPGxoy6XgxSAKNS9ElHNGDHO6cId6DKKygm0KyyAmtF54Qlm4ZHxGhCV4AI+ym7m6DIrH9aX5onolEIJK955bpSoiDRwk0YZjR5jDIIIRlEHBWaVhjLoYl6xBpF0nIxkmRG5qLgsAS4EYBj6JeAmAKS2AdRrHVxTo9AFFZCZGhAEFoG3DCnw75EcB5GSmynZwOTcmUC8mGSglCzSl5A4lEJLGuGTZwkPgdALgepcD9CGCxgtr6ncATINwlp8FggkDlDcpcmXjWn6Rqm4mgBijKAKnEGBikmDIsmyzUksC0kWlWmGjYphn+m0LjKGlJkW6Vz5CJnMiWhBmcAinzwkpmwtQxGxnenxmUqplplYIplZnYLEROlmiOAck3IR7hH8nlHMCAZMn0BclIhanETtlZGVnonGnf6mlVnCizHzF+KGRMSuFdlbb+mEroaLmzJNnTF7bILFb0Q0JcDoTXFEhKlsCzR7nxJIj9CxhHmzScrCGGHcE7kiQEDnnQRS6FnnZPnZo278y6DJBYq6BXLMg3mHoaG8AwKNytZ2ngoflDqPnPmxhCzQX2Bibfm-kdD-kmTog3mZbZYLi8y-gHkXaFkLgEmxawq-iaQ-l-kAWKBAX1RgUKDwZHk5YxYDJXRSK6CGjnQHCWAQWqIpYTL0aqYHH7AIiQXWhA6rl0IQXfzeISWEKaRQZHBbbODbaYW5rtDtR4hUAABeUw9FPFMWl5kpX5lClFaF1FCgnKH8fAxKFA9y-QpILCopNE-MDldWlQbB2FdhcpM2DuOcCi7lL5SBKWDuYokWAEflgUAVTlnlWWHBd5mhtCYV2F8VRhoFkVblMV1hpWwFCVpgoVF2uVaVEVtC-ljlHl2VGl1AWlul3lVBGEmlmgulJVRC3h6mZYTQ0VlQNkJA-h9kyg1gWIqi9xpmYplC1ltlrQG5NeLUt5aVYhT2JhqxJFoufmpGn25uc195cl5u7uc8SyoJO27OyCSh3AehEhBh81S1WJDBL8HRdE45neRV21rWDZI0e1EOXu2CR1H6W1vgvB25SOTY6af1PBP6I1meWop1Kh4hiWYhIFO5sa-K0N51cNl13BGiJqtFqVL1LFKRsQ25OVwIIFqWv1KVCNQO+N9AhNoNpNx1LU923a6Ip5jCsYugAAVKQNjOWuzehYBbmhNciPZV1c5RpK5SLaQTMHVYIaJPJnwBlRLdlU3NLfYc7Fai+XXLLTvLGGzO2qVWphppld1dWLZAEbcINehKotoYjKYKNRQvcILXZXENNWULhO6DwOOAcBvF6FwKBp1owMwI2ESG2OSB7ZwF7fsN4ukOESti6bmPWOWr9AHckH6arfHbyPAd4kGWWCnRjLmiHRSJ7UKTnQPmtdmNxExdnYHaiPvunQ2NfkIEQHiGHRHS2i2lXckMSancWHSh3TXUwQXS3d7f2H3ZLB+nJr0oJt2QjKbLoFLUUbmpJr9ktjbflurdPfdsgSoBVk6i7ZSS1B0CqPFeXA+cJZsXrhOJvVrB8Q+EcRfT1g0LoOcb7E7ARbVq1gBCeSoPsLijkX4I3TYC+aAFeczd-RQLis8USC8vylVVQDVROPcRYO0oTbA-A8sCtqeYJkuuEThGivytfSBkGOmucRYP0j5JyniK6GQNOYzdmqpvBnXYnYPWyVg9Hb7axSNKwz7UAyyS8mydbabDyiSROeRScf9dwwJSplNpIu1bwGyboI0AUdQCtNxXWLyDPf9B8apaI6ZYJsSBwOSPMckHzeBGpXWlhg-XI3Q1Ng+DGMHaSKHSw2IzwRIyZfcDmFtAnXyIOAVVIvI6bf1c412K1XGt4vaHbZZZyf0S0XpZrmlOUrdj9nLYIltoxZKUsRwzo-cGZZ2MpVI4Qn0QMa0TwC2uMisG9bGtCXpcpRhfzTco7cLeVaLcKJytFioafQ3Evck13uAwsZUTjP4IAxU5pFU5-SJCpS5ZQkbUFePm0w6gVXMy1dgmVYFaQc8JQ8ieNIM2ICrT3VYNQj-X0yclswA2ILGFYHrSE9M6QZQ4Y-UJY7s8yGKLc9Q-c4JgrU05LcbEEwVW7fhO8-rdc5VWJBs+8QVZA5rb0yghhokMtKIILBA0cG4Ui+qoC4rUgfcQs61h86s9lWC0lYc9C5FVItMz1X1fQANSIENXqM1h8RM+NvQA087dXsfC1LcVg4DMiyRA6WEB1k7M1i8QfZwEfbceQ2WN8fchy2GI1A7rcRPgY685fUEysFKxsO3tgqqwoj5HK+sxwCglbnwBVu4dq68boLq0mH-ds7YMEyNPjGEVwIOaEF2e9q5asXvQZe081tPXK3M6TZynds46Uck4vpq9PRPVRgGzbQ9hbKGwvbDt8zbUG70iG4G2yU6ovF070pG6bCm4mzymvVVmXfQDk+hUUA+OUGQCij6F6GWEY0Gx2UHLgDyzwJEC8uiGYr4tCOYKaHoi8sVLoASMsOjq8kO7rOeDoAAAz5DCPChvJWbTCVv-J-n5CVnYx6AOrDsT7oOGlkE864RHDdtmi9tor9sAA8o7qkZiF78wI707lZc7hEu7S7aFK7poa7V7RD0M-b2o17HpV7T0l7Xbd7ponm87T7+7277bygPOqFaOb7zk30MMJON7eykHZo77Xbm7Dqr7ZooHj7ziQHM7Cgc9i7sH6D+ADgMgCgTbaUFbVbfotb9QKKArBI6IsstxIk-KiQ8MqH8o2Hw5wN0M-Kg7SDiQFg0IZGiQ9+EnAnwo-K57on4nknoAp7tyRHxC6aP7inanjUUneoEn6njsApvgVrUwdH3pNbmo5a9bWRr0uA9CWDIy5n1bsIVnzHy11Y3HFg2AE7AAbJsA54G054uy54x9ZzsZh6AAACxTsOCLPOcMdufH2xSbDZuSrBf0eWd1s7HccFBAA","body":"controller(\n  list(\n    \"test_b\",\n      test(list(op(\"=\"), reg(\"b\"), constant(0))),\n      branch(label(\"gcd_done\")),\n      assign(\"t\", reg(\"a\")),\n    \"rem_loop\",\n      test(list(op(\"<\"), reg(\"t\"), reg(\"b\"))),\n      branch(label(\"rem_done\")),\n      assign(\"t\", list(op(\"-\"), reg(\"t\"), reg(\"b\"))),\n      go_to(label(\"rem_loop\")),\n    \"rem_done\",\n      assign(\"a\", reg(\"b\")),\n      assign(\"b\", reg(\"t\")),\n      go_to(label(\"test_b\")),\n    \"gcd_done\")) "},"captionHref":"/sicpjs/5.1.2#fig-5.6","captionName":"Figure 5.6 ","captionBody":[{"body":"Controller instruction sequence for the GCD machine in\n      figure ","tag":"#text"},{"tag":"REF","body":"5.5","href":"/sicpjs/5.1.2#fig-5.5"},{"body":".","tag":"#text"}]}]},{"tag":"EXERCISE","title":"Exercise 5.3","id":"#ex-5.3","child":[{"body":"\n    Design a machine to compute\n    \n    square roots using Newton's method, as\n    described in section ","tag":"#text"},{"tag":"REF","body":"1.1.7","href":"/sicpjs/1.1.7"},{"body":" and implemented with the following code in section ","tag":"#text"},{"tag":"REF","body":"1.1.8","href":"/sicpjs/1.1.8"},{"body":":\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":9,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAVgHQEY0CYBQuAzAVwDsBjAFwEsB7E0AZwEciBDAJwFMAKADwEpQAb1ygxoLhSLt6vUACpQvANy4AvvmLlqdUKwBundqwDmPXgBpQAT0EjxEzlJmg+oANQ3BYbKo2FSSlp6ZnYKPjtRcS0g3SoGAH0TGhoAEwTOEhoiEwALbhMiTgYGSIcHSWl6AFtWClyE1gAjBm5mNi4CopLBAFolQQAeUAAGNBGRjFUHDQcYnXoqaoAHdhpDLuLS4Sjyx2d6AyNTHkKtqzkwM57p8VnowIXGJjCEqgojTZ6dvbFKl3iSRS6Uy2TyX1Ku1+5QA-KBrgwodDxAAuZ6vd6fJardanbqlfi3MT3P5OKpiUIUN4fdjcDCE9T4SncFCEoA","body":"function sqrt(x) {\n    function is_good_enough(guess) {\n        return math_abs(square(guess) - x) < 0.001;\n    }\n    function improve(guess) {\n        return average(guess, x / guess);\n    }\n    function sqrt_iter(guess) {\n        return is_good_enough(guess)\n               ? guess\n               : sqrt_iter(improve(guess));\n    }\n    return  sqrt_iter(1);\n} "},{"body":"\n    Begin by assuming that\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_good_enough"},{"body":"\n    and ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"improve"},{"body":" operations are available as\n    primitives.  Then show how to expand these in terms of arithmetic\n    operations.  Describe each version of the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"sqrt"},{"body":"\n    machine design by drawing a data-path diagram and writing a controller\n    definition in the register-machine language.\n    ","tag":"#text"}]}]