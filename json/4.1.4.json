[{"id":"/sicpjs/4.1.4","tag":"TITLE","body":"4.1.4  \n    Running the Evaluator as a Program"},{"tag":"TEXT","id":"#p1","child":[{"body":"\n    Given the evaluator, we have in our hands a description\n    (expressed in JavaScript)\n    of the process by which\n    JavaScript statements and expressions\n    are evaluated.  One advantage of expressing the evaluator as a program is\n    that we can run the program.  This gives us, running within\n    JavaScript,\n    a working model of how\n    JavaScript\n    itself evaluates expressions.  This can serve as a framework for\n    experimenting with evaluation rules, as we shall do later in this chapter.\n  ","tag":"#text"}]},{"tag":"TEXT","id":"#p2","child":[{"body":"\n    Our evaluator program reduces expressions ultimately to the application of\n    \n    primitive\n    functions.\n    Therefore, all that we need to run the evaluator is to create a mechanism\n    that calls on the underlying\n    JavaScript\n    system to model the application of primitive\n    functions.","tag":"#text"}]},{"tag":"TEXT","id":"#p3","child":[{"body":"\n    There must be a binding for each primitive\n    function\n    name and operator, so that when\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"evaluate"},{"body":"\n    evaluates the\n    function expression\n    of an application of a primitive, it will find an\n    object to pass to ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":".  We thus set up a \n    \n    global environment that associates unique objects with the names of the\n    primitive\n    functions and operators\n    that can appear in the expressions we will be evaluating.  \n    \n\tThe global environment also includes bindings for\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"undefined"},{"body":"\n\tand other names,\n      \n    so that they can be used as constants in expressions to be evaluated.\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":1,"eval":true,"prependLength":82,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS0oFwAHuSyfLIAbra04s7CDACe4gBG1PwMilmslYqlrAxq2Vq6BkYmZnT8suwqhSXllUEhPcR9ysI1w3rtc6AA-KDWtsLirADWaviGrPkDZRVVoNMMGvWNzcRZGrPzBgBcoGMTB0NnoAA8z739p7f3dpLLiGQzUOwAInI1GooHWxCKoFYhnYhHycgYoAYhEkkkEvCeENAAGpQHdAYCGORDJRxpR8EU3kctKSIYoiaTyRT5lSaXSGVNamcAdyniCwZDobD8FwAO5IlFo5yY7G4-E8Qkksncim82nsemM4qHYZatmgDnanX3PX8xn-DRRWIEEgUGh0WSkfjUBj6pjZXLEdEiFo6cnGUzmJQ2fjCFpOl0Jd2gfC2KlMHZ7Lhx66tcOdKNeHzxmI4MTEKmhZpSchFf3XQPB0CBUDEQj8fhRRNupLrLYZ3b7Y3vaq1QhcD5tAwRrrLGx2YdHUf8cdnBPxHt0TP5JiLyrCbdcVrtfORuhFg+Do-r12JLdXpjTVeXrPHgyn2dsSixw+O0tl2hK0kGlxEoKgsjUcsqVYDFm2eIRhEEKlhAhEgeC4VMnB4c00Iw2leHOLlrWIgwkJECFIGITCwKKc1QEo6ja0IkiWPaMiUPWFQmFgSA6LhVguJ45jWNY9iIU45QmAAUT4-iuKk4SRJIsSADlWBU2SDDUlSRSU60-yg8hlhAsDKAgphDJg8hd0GI5m3JdZJFEZsAD5PC4bxRHOYzKFA8DIMAtgMQMwKfL8syAorILrKfCd7PaRznMCNyLy-WNSA0bzgN80zzMs4Ku0MsLcu2W93UxFt2KI+DkIhItZKLYjFLYhCoRjWS0qa+RqrElZDFkvqup61qyNksihvuMTLDbDtzWm9t+G5ZrSNanhGDxVhaMUNaGA2xEKWW-QxPFcE+JOwx9O6ybWokphWFKBg2Vu+7MUBQ6avI4lNP0YQUkUIogjclItX296xIAWm+0Bfv+wHQGB8HQFBq75ghkhkS2gxgfaZKDER7GwdagAqKGYaRuHgaJpH9EJ2rgFJv7ydc+HQDAZHhtqgBSBnYeZ4HOep0BafI4JAk0smAb55sQgBlG5jEgBCYJxcZyXceBpWW1ljnyM+HmmfVr4DG167as+MXFDmCWKa+Ftybllrapc-W1aB0A3P0E3UdalyLfma2pd9z3hZQhWoZZnGPdABWsd09oQqi4r-IzMraBsk0Koc1gnKLRRsvC8yNzvNcAMT-OSpTpM0+oUoACsuAoTOEuzg8SGZ3qTP881UpjVviEy96k4iyvNxL7s73oZhy+Tov3T7vN2hnKNLDYTheAEBD4nZaeIohP9YlnpId-M3y8S4YMBLn+IF+nAtzw8nw0vn-e4lTugmlMSR6xyMEgwKG-9BLw9GkDI39GwFGzpIDIwhj6lSrsQdOI5qp6R1LAiygUrKIOZA7FB8xIHQLQYfBBNd66N0UMg3BgI0H5RimOCcg9KEqGrJIWsYDf7BhfqXSsTCmDsG9A0fgbC8jODgh-HEQi-5yGEH+HAPC+E11qBI4MEQgA","body":"function setup_environment() {\n    return extend_environment(append(primitive_function_symbols,\n                                     primitive_constant_symbols),\n                              append(primitive_function_objects, \n                                     primitive_constant_values),\n                              the_empty_environment);\n} "},{"tag":"SNIPPET","latex":false,"id":2,"eval":true,"prependLength":90,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS0oFwAHuSyfLIAbra04s7CDACe4gBG1PwMilmslYqlrAxq2Vq6BkYmZnT8suwqhSXllUEhPcR9ysI1w3rtc6AA-KDWtsLirADWaviGrPkDZRVVoNMMGvWNzcRZGrPzBgBcoGMTB0NnoAA8z739p7f3dpLLiGQzUOwAInI1GooHWxCKoFYhnYhHycgYoAYhEkkkEvCeENAAGpQHdAYCGORDJRxpR8EU3kctKSIYoiaTyRT5lSaXSGVNamcAdyniCwZDobD8FwAO5IlFo5yY7G4-E8Qkksncim82nsemM4qHYZatmgDnanX3PX8xn-DRRWIEEgUGh0WSkfjUBj6pjZXLEdEiFo6cnGUzmJQ2fjCFpOl0Jd2gfC2KlMHZ7Lhx66tcOdKNeHzxmI4MTEKmhZpSchFf3XQPB0CBUDEQj8fhRRNupLrLYZ3b7Y3vaq1QhcD5tAwRrrLGx2YdHUf8cdnBPxHt0TP5JiLyrCbdcVrtfORuhFg+Do-r12JLdXpjTVeXrPHgyn2dsSixw+O0tl2hK0kGlxEoKgsjUcsqVYDFm2eIRhEEKlhAhEgeC4VMnB4c00Iw2leHOLlrWIgwkJECFIGITCwKKc1QEo6ja0IkiWPaMiUPWFQmFgSA6LhVguJ45jWNY9iIU45QmAAUT4-iuKk4SRJIsSADlWBU2SDDUlSRSU60-yg8hlhAsDKAgphDJg8hd0GI5m3JdZJFEZsAD5PC4bxRHOYzKFA8DIMAtgMQMwKfL8syAorILrKfCd7PaRznMCNyLy-WNSA0bzgN80zzMs4Ku0MsLcu2W93UxFt2KI+DkIhItZKLYjFLYhCoRjWS0qa+RqrElZDFkvqup61qyNksihvuMTLDbDtzWm9t+G5ZrSNanhGDxVhaMUNaGA2xEKWW-QxPFcE+JOwx9O6ybWokphWFKBg2Vu+7MUBQ6avI4lNP0YQUkUIogjclItX296xIAWm+0Bfv+wHQGB8HQFBq75ghkhkS2gxgfaZKDER7GwdagAqKGYaRuHgaJpH9EJ2rgFJv7ydc+HQDAZHhtqgBSBnYeZ4HOep0BafI4JAk0smAb55sQgBlG5jEgBCYJxcZyXceBpWW1ljnyM+HmmfVr4DG167as+MXFDmCWKa+Ftybllrapc-W1aB0A3P0E3UdalyLfma2pd9z3hZQhWoZZnGPdABWsd09oQqi4r-IzMraBsk0Koc1gnKLRRsvC8yNzvNcAMT-OSpTpM0+oUoACsuAoTOEuzg8SGZ3qTP881UpjVviEy96k4iyvNxL7s73oZhy+Tov3T7vN2hnKNLDYTheAEBD4nZaeIohP9YlnpId-M3y8S4YMBLn+IF+nAtzw8nw0vn-e4lTugmlMSR6xyMEgwKG-9BLw9GkDI39GwFGzpIDIwhj6lSrsQdOI5qp6R1LAiygUrKIOZA7FB8xIHQLQYfBBNd66N0UMg3BgI0H5RimOCcg9KEqGrJIWsYDf7BhfqXSsTCmDsG9A0fgbC8jODgh-HEQi-5yGEH+HAPC+E11qBI4MEQgA","body":"const the_global_environment = setup_environment(); "}]},{"tag":"TEXT","id":"#p4","child":[{"body":"\n\tIt does not matter how we represent primitive function objects, so long\n\tas ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" can identify and apply them using\n\tthe functions ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"is_primitive_function"},{"body":"\n\tand ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_primitive_function"},{"body":".  We\n\thave chosen to represent a primitive function as a list beginning with\n\tthe string ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"primitive\""},{"body":" and\n\tcontaining a function in the underlying JavaScript that implements that\n\tprimitive.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":3,"eval":true,"prependLength":5,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS09MyShpTilFQAbmrxFDTEwvFaugZGJmYWzGycvAJCRSSKAESp6ZmUOc0aUbF5iXRtGdlq6ZL8XOLOrAONxCV6Bsam5p5c3sJslPxzGj0xeGLEDOSg4gCeVmnDnWrjhAyggYv6gifCrdcdXYrCAB6Kc5BAB8oD+oAA1KBzqB9jxGONWOdhJYht9ciR8rRhBcru0RlZ+A89lF4QxEci0QSxhMpnIZgUcZcqbdCcSekA","body":"function is_primitive_function(fun) {\n    return is_tagged_list(fun, \"primitive\");\n}\nfunction primitive_implementation(fun) {\n    return head(tail(fun));\n} "}]},{"tag":"TEXT","id":"#p5","child":[{"body":"The function\n      ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setup_environment"},{"body":"\n    will get the primitive names and implementation \n    functions\n    from a list:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-1","body":"1","href":"/sicpjs/4.1.4#footnote-1"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst primitive_functions = list(list(\"head\",    head             ),\n                                 list(\"tail\",    tail             ),\n                                 list(\"pair\",    pair             ),\n                                 list(\"is_null\", is_null          ),\n                                 list(\"+\",       (x, y) => x + y  ),\n                                 $\\langle{}$more primitive functions$\\rangle$\n                                );\n\nconst primitive_function_symbols =\n    map(f => head(f), primitive_functions);\n\nconst primitive_function_objects =\n    map(f => list(\"primitive\", head(tail(f))),\n        primitive_functions);\n      "}]},{"tag":"TEXT","id":"#p6","child":[{"body":"\n\tSimilar to primitive functions, we define primitive values that are\n\tinstalled in the global environment by the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"setup_environment"},{"body":".\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nconst primitive_constants = list(list(\"undefined\", undefined),\n                                 list(\"math_PI\",   math_PI)\n                                 $\\langle{}$more primitive constants$\\rangle$\n                                );\n\t\t\t\t \nconst primitive_constant_symbols =\n    map(c => head(c), primitive_constants);\n\nconst primitive_constant_values =\n    map(c => head(tail(c)), primitive_constants);\n\t  "}]},{"tag":"TEXT","id":"#p7","child":[{"body":"\n    To apply a \n    primitive function,\n    we simply apply the implementation\n    function\n    to the arguments, using the underlying\n    JavaScript\n    system:","tag":"#text"},{"tag":"FOOTNOTE_REF","id":"#footnote-link-2","body":"2","href":"/sicpjs/4.1.4#footnote-2"},{"tag":"SNIPPET","latex":false,"id":4,"eval":true,"prependLength":17,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiUDOA+uQIYDm7ApgCZMA2jcgApS1ALYAHWl2LkANKHIALLiw4BKUAG8cofaABOXcoUN1GTSa0qHRE6cVnktAMlehVrHvaky5WgC8wUqq6uwA3DgAvnhEZFS09MyShpTilFQAbmrxFDTEwvFaugZGJmYWzGycvAJCRSSKAESp6ZmUOc0aUbF5iXRtGdlq6ZL8XOLOrAONxCV6Bsam5p5c3sJslPxzGj0xeGLEDOSg4gCeVmnDnWrjhAyggYv6gifCrdcdXYrCAB6Kc5BAB8oD+oAA1KBzqB9jxGONWOdhJYht9ciR8rRhBcru0RlZ+A89lF4QxEci0QSxhMpnIZgUcZcqbdCcT9gRMQNQKxJONmV8Cf1GfFFKxDOw3i4dC9yis6Lz+UxKMQmCQeFxDPxzir2EwAFasLKsBikNKSESysrW-QsnLKqS06azYryK02sriyVCHrWg44RXavE3e3C7G4u13IkMRRS4QYRQAJhJQA","body":"function apply_primitive_function(fun, arglist) {\n    return apply_in_underlying_javascript(\n               primitive_implementation(fun),\n               arglist);     \n} "}]},{"tag":"TEXT","id":"#p8","child":[{"body":"\n\tFor convenience in running the metacircular evaluator, we provide a\n\t","tag":"#text"},{"tag":"EM","child":[{"body":"driver loop","tag":"#text"}]},{"body":" that models the read-evaluate-print loop of \n\tthe underlying JavaScript system. It prints a \n\t","tag":"#text"},{"tag":"EM","child":[{"body":"prompt","tag":"#text"}]},{"body":" and reads an input program as a string.\n\tIt transforms the program string\n\tinto a tagged-list representation of the statement as described in\n\tsection ","tag":"#text"},{"tag":"REF","body":"4.1.2","href":"/sicpjs/4.1.2"},{"body":"—a\n\tprocess called parsing and accomplished by the primitive function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"parse"},{"body":".\n\tWe precede each printed result by\n\tan ","tag":"#text"},{"tag":"EM","child":[{"body":"output prompt","tag":"#text"}]},{"body":" so as to distinguish the value of the\n\tprogram from other output that may be printed. The driver loop gets\n\tthe program environment of the previous program as argument.\n\tFollowing section ","tag":"#text"},{"tag":"REF","body":"3.2.4","href":"/sicpjs/3.2.4"},{"body":", the\n\tnew program environment is constructed by extending the given\n\tenvironment with a frame binding the names declared at top level to\n\ttheir initial value\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"\"*unassigned*\""},{"body":". The driver\n\tloop evaluates the program in the new program environment and\n\tprints the result.\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":5,"eval":true,"prependLength":496,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqTtCFZ7QHd5Ng4CIKIrW5hI+1n4hqi0BCrDm8I5+KO139nO44Ty1PZmSahuLrPS5z37RCDmSBVBzPs511vE4cpyU47j5Q-zS3iwK2rbmb6PdetyvnmryY+Ic3j+KEFZQAYJYV1oUmPyPKCVlrOEkmDwnnA1otM1PjnQB2chyGINgwupXZNHFRrmsCUgwukL-v4WHBtbHe3R96QRPNCABgDAhXwzL7dcJ8ng6T-DMCBQFULzi+BudBRJfSdC-KzO+6Rf7SGkMrdegk1ZKj7O2IiQNh6gHTqABK+daFlHirQaM35E7MNbEsAM+dt6SF3uAz8R9oSKASt1NO0IIpkAQvcJCG0mDRWwb8JwCjMIbWdG2GQdkJijyONeBKSMMreTarlFC-D9HQJgYArRSiXaAxqvYj47MKEfXUT9Rx1BlHimtn6JoUlz69QMsAjo-oYagGIgAKl8f42JxFdCROCSjShRJ0KTTLn7fKOF9aMNBjaO0Th66tCUEXSaVxjSmm5KzOxbj3GvHSe9VW6FFF+LyhufJrxg7MLztFIuHSkLrlbkaSEp4cZ8kaRYJeFhhkrlSc0BuCzRlLMVqAIaStDFhPsENChrSN4iHRrgyZp88YdwWfg-0rdFCnLvOs+pBd7FF3uYNcp4yTRQmAlM5KMzAhCgabVOZjsJSrXWq7N6BBNJMEIKwDgUA4CIGQOgLAAAmDJm8iaSBBCCDaLgvr0PJvaSsIJ7bmAvu6SQOVvygAAGR0tAGTUQkgAmsyipFaKxKnw4oOR9GYYQ6SEJAqEic9hsW4vxdg+hxFBUeGkE9NeXi3BCtuey4wAQdliqZSygJlZqDCt+S0j6xT7Rys8ENclIVtXStlSq+VyTNnlONW0mY-Qb5PFFX1CVeLvLSpwsRd1iqVZHPsKavoXpAkEKtaDW1QaUlBOkC60NW9E0aPdbSwpuydWssUPqw1t9k1UPgphFC6qtXeucKS31BLvgytWYkYNhzi0NvfI8kVWbtXMtzfmxQ3a9XUoLcgnSni2mttzh86pEy6kdorQZftebB2LoNd+Eda9m2ZLQeIyBPzb5eoMj6qVhKA3pxET8N5HFQAAB8r2NkPX649Z4SJSFMpIFs9oL1GBvXeqtOKa3+qfTEuKn6+VtLedcpoma500TTT9DNC7e1EPSR9cDQ1Pm1N3Z6ztfUENLsQyBNdIbi3htPe+N5ih3W6DQ1Or5KwY3ZttaR8926gKOso066aNGMNFs3c4cM+pDRce+VBkG2b721u6YB2VrpBMQlo-QJtXiZNUrKt6HESykFyn3WGuYUablwa9LoXDK6kOjpTfxyMXCYyztE123Vy6vz4aNTxze4aLOyZqcJ0qXoKq6Gkdpz6dbpMRg89O0gjrvPlQxIDaRoGU0zGAyx6CHaACQmrbOVp5ZKh9daA2JcPjuxTbT8uATwRm8tGWDLqKsIQehGBkPFdVgfUr5xItqc0xsAL1XVr0LRQ1lNJWJErgSiJgmDGvqlJ6zhAAzP14tJWny0DFFHMjn5RsUuzSRuRZ7mtDcnqlQbO6I0DHqa4sGtozXKaEw8M7ARDtARUz56LitbstSa+Bkbpn138ucNkys5c8k2Y29q8TAGpkkT+7PIrKaqlyYw+t0Gxmh1yhcyIGYPM6bYz3dhg9v7ssSZlRj1UzRrsKa-begUoPH3g5iUTvmCDG1zcyXT6WJkNrUGZh6rTw9Y0TZq3Vpnm8Wf02W5bSTvyDa859vznCfWzPFuFxEWWGJ5Zc86zz8b0upuAdm3F4tMw4ETwDuSyl1aj11oDiRQ3ohofFutwzms88dbSQsIURH9ne3G8FyIbuM8Acbljib7NC7A-y8ydPB3c9A+S+zZ7heYesXOFNqoc21uneBxjyDzIf908GL4j972fvckB4XpnzLpDHNLsD6j8Vzh2HretZls3OXxfnJiew23mT2GcO4RVsbdme1LqIQnkQ4b685PXPRm1hLiId5Sf94vNedS0kxAyPEBIMHqrS67yrtfNFZGYMZFf9IcTr5ZDOiX37Kd1434f7o6JV+n6ZBv5LvyR974UXf4-WIn8NBf2crDbfcwaDHUZvAnANT-I-B-E-RkP-c-cLb3PfZkYEKAukH-WA5A1-bHIA55fvJvP9c3VvYYEiZAr-aA9As-VjRA0Ab-BkdtCXHHewbrWrHCerd-IgEue-OkCUBvKXH4GXQDOXJVNpZMHmLgjwHgvvYHPqZg+hXXb7NpcNYSDnDBVqOHb5cSUEZ+RIdDb5EJRgwLDcYiZQ5mFYZJW7NQzzFYTQkEbQ98UnRgJfWg3-TA1kJbEwzfIHcwZhZw-OZwiDZHDYROSlSA8QmAygrA0kecJQjkFQp0cNDNZwv5f5cwaVX3MIyQgjYhc7EpDw+Ii7Y7JQJIoFNxNIzg4-TI35EolI0QyWDItlLIvXXjdkBYOIgA7nN3MTPHf9anNvYw2I0wsndgywsLBHYPD3IfAjdgiSXQ4+MYgfAdFdJzQtFpaFVWWFeFTgJFHgVFNAabTFNHKtEmcmfYS4KfTLRoJoFlVYM43ArYEIS4P8Q6QiS4Eg0oaQa4sQa4Q8BQT+EKYsagdScUTvRPB0fRU4l3UGAAQlAOOIpkUDOM4iTgOJ0xKU0kUDa18xYSswuRAMY28C8h8lDXMNqkxOiz8xxOHHYPRwJMynRMIHONxyyx6LrUIBIk8jpNVhBJ9yazJKzhvEZKYL5x6zZNADYOEIGyaxGwZK62FNq1FKEPz0a1DSynEHai6QFNlK13lN0HkKI0yXDTKWiC8C0HVzxJnyNLaEdRfFmmoLrl2VuUtQCypzrS2RiUtJt2oI9JmhnCdIMKR0UEtSXyLFbHuFIDBEsQ6hnAKRAN7WriVIG04LhUjRjN3xzQCXjJwGYW5WT3NkjK6Xzgr24g3VcwKOTIGA0yo3KX0JAI9BpUrI4wBGoPLPtA0xvFUxdx3zwPnXsxbObNU1bkqg7JMHS27PsF7T7KaM3nSg-lVPVJQgbKiBiwQntFTLHNCE0BBHJj0zSQ5TUU3O3KXLvhCDrMInDRbJ3IDCrIDB-HqBXNVOyI+PDO3I0yMAAB4NznyyZAz9FjyxBmACJFBiIsRaBztSAagbJbDEEt5KhWiNp0hiJQAABqO42qb4UycMuSfYV85CmJEiXC17cwdCgkEELCn8m87I54oCkCogUQSiSCuw3WGC2I+CmJAi7+YizCwgbCxNEJFCx1RClCwireYmEisio8pfVscoSoAI25JZXEu7NpMYFwUoCGNclID6YRVYRc381OB2LovoHPV84SikfQFStEA4CgUMkiucqxaM5pYS9IJZPc9My8qSEy1yo8xyreHeBzNyn8XtCS-ubaGuNyMYFynMs2YyfMyfPSwUACo6eSmJMgRoLyUAINGRIoZOFyRhQKORFgL0fOdIi8uZEebNLS9sr0AIocr0ZImBFswcyqnINdZeN2EA5SqStS14KcoSTCWShuJKqIBSt7FNDq1SyywwOKy6FNCqnSm8qatMt1Iy3iu+SYUy8Qcyrqo8WgMMiM7KOy-Kdmby5yzlaKEPFajy5MH4BdJc681apaHykRPy183QQK38zKlIRyUKhScK060ASKlPaK-aqM3wBa2ZBKwiJK0iUgVKiUdKwq5iQyUtRnYKl6QeHKwqZhFsoqpM1TCaj6rYUGCqhqtsvs6ooqBqoaGq5qgm1eOm9csaiyzM-AMAGFFgdgLY7gFFPgXAEsw4kyMyGgdSIkqhY6UgQU0AgglvMWkiZSVSIWz09guW8yJwFSBYYvVQpKALAM-yA5ZhZWhWkWokVRQw-bQIW1ftR1CwftFKOqiwW1fNK28wfNW2oFW1U8p20AU812-kW1bBT27BH2ooW1JashR1UO6QD4O21ImfSUBgBYSQGoR1OOhOiCrYaO024iZ4p2540MDO21G0cmWYeoBgZJQusmYupgSYfOmfJCz2iwBE3QGoIwSKWGBiFCtOmuoLRieu8wRu0AZu6JBiFiTut2mfRiSAp2hiAIVuiwFiaeruowpJXQFIfuwe2ehiWJAe8wReoC4AXuhSV4gelutu0AMAUe32mfAAUgPrXpPtAAYivu3tAF3uIlOvrrvqHpcubrHqCyhM5Q-qPvXtPv-uih-svqCzfNvqAfvoYg-PMHAeDpnzfMil7s-o3tABQYQdfuhmgabtgdAFhmwd-qMOhlQZXoCHQdPrIeIYgaMKhIPofsCFnvMBhPMDOP5G6n1tMnlsBIshVI0yigmGAX7V0ANr4aNuPi4fyvEeFriloHqAACsfjVFhHdNBBol3aeHzJHUdakodISjZH+GqEDEsyZHtHDamMTbpVbUnYIVHU7GXYM7-lbVIBSBnY3Ak6V63GPGbpnGZkC75AK7YBIAnby6nAQn-HGlAmi6ABRT28J2JqJ0omfAAOUkFSYPvSdSfuu-mkdfC9osYkaY2qqEYCGAXIGiQXXIB-CMeWzfEDm4m4cFuKe23fCprKaAV00qdnoDJqdqaKeFqse6j5vsCMgFt4bkdVhlsguwQlvGYJH3wPGYBEhssUckCkG3lMhTzNtDDqbVo+PXE1vFvJsCAkjmaRM1X1M3iupkpipnAlpnMynufynfh4LqbikrOEuajqZKZeu+Y+DeYCQ+aawUeUaoBcRSI+F+baYnWiDjgBa2ABrzOBq6RaWzOZScBBFbDvJJ1RfXCEV6iqBeY3BGY+mIGTBxGUnyhuDUGbgwpBF0DBZ+KtQ+jZE4pBBpCUZZamspQ5O8nROZaoFyfvhiTfP5cYk0lwbO1FBBdDS5fBbGlShCGIjfKMcldVmlaKllepUIiFaVZShVYAG1BL-qlsOW+17N9Wg5+KSIAWUL2XRLwy-LrWjB+KABdYiGVkShlsi61xOFeCwFOl0fYYiZicNiNyNqN6Nnu05wpulisBl3C4iAAHXC1wsdYZYVZ5f4rTabVGdAApZ9CsFzVpbNkTZIolrLZ2erfpcrb1vyoJFUH3lrfzmIgAFlGIw4HBSBm3KAEKmn8q95KA+2TI6W23O3u2hoB2UTQBxRTJ1IcROr8a+lG3e3SZ84i2cQS2Akm2W34UU8Cba5s8yFFJ12kgrUAhg3E6gLw24ZsR-qMRVJCQNp7pY2YlFUB5doh5LRr3Q2Y2APAPY3bs92fhW3c302ULQPk283aaLBuHaAQQyp85Spkwz2+24PvD8qbFBFootKwFmMCsgJARaWkPshMOmF8qElnF85vFehqOdEcODE8qCnSOypVT84nmLF8WZxEWPgmPdAGPxQ9ZurLQfDSY+3OP-hqQ2PsgxHWAyO2AHzUbC3KWBb8ph3R3a2mWJPSYKPQZ52+Gl3xrZOlPSrkS+JiJypJByAcon5jx73mAShWUNpiJizDPF3Nq81MXsWFGIgSWuIgA","body":"const input_prompt = \"M-evaluate input: \";\nconst output_prompt = \"M-evaluate value: \";\n\nfunction driver_loop(env) {\n   const input = user_read(input_prompt);\n   if (is_null(input)) {\n       display(\"evaluator terminated\");\n   } else {\n       const program = parse(input);\n       const locals = scan_out_declarations(program);\n       const unassigneds = list_of_unassigned(locals);\n       const program_env = extend_environment(locals, unassigneds, env);\n       const output = evaluate(program, program_env);\n       user_print(output_prompt, output);\n       return driver_loop(program_env);\n   }\n} "},{"body":"\n\tWe use JavaScript's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"prompt"},{"body":" function\n\tto request and read the input string from the user:\n\t","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":6,"eval":true,"prependLength":0,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA4GYCuAdgMYAuAlgPbGiEDOApgE4D6LTAhgCYAUABxbUAtgPJsG5FpWIBzAJSgA3jlDrQncoRZ0ho8YOFiJUmfIUBuHAF8gA","body":"function user_read(prompt_string) {\n    return prompt(prompt_string);\n} "},{"body":"\n    The function\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"prompt"},{"body":" returns\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"null"},{"body":" when the user cancels the\n    input. We use a special printing\n    function ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"user_print"},{"body":",\n      \n    to avoid printing the environment part of a compound\n    function,\n    which may be a very long list (or may even contain cycles).\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":7,"eval":true,"prependLength":477,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqTtCFZ7QHd5Ng4CIKIrW5hI+1n4hqi0BCrDm8I5+KO139nO44Ty1PZmSahuLrPS5z37RCDmSBVBzPs511vE4cpyU47j5Q-zS3iwK2rbmb6PdetyvnmryY+Ic3j+KEFZQAYJYV1oUmPyPKCVlrOEkmDwnnA1otM1PjnQB2chyGINgwupXZNHFRrmsCUgwukL-v4WHBtbHe3R96QRPNCABgDAhXwzL7dcJ8ng6T-DMCBQFULzi+BudBRJfSdC-KzO+6Rf7SGkMrdegk1ZKj7O2IiQNh6gHTqABK+daFlHirQaM35E7MNbEsAM+dt6SF3uAz8R9oSKASt1NO0IIpkAQvcJCG0mDRWwb8JwCjMIbWdG2GQdkJijyONeBKSMMreTarlFC-D9HQJgYArRSiXaAxqvYj47MKEfXUT9Rx1BlHimtn6JoUlz69QMsAjo-oYagGIgAKl8f42JxFdCROCSjShRJ0KTTLn7fKOF9aMNBjaO0Th66tCUEXSaVxjSmm5KzOxbj3GvHSe9VW6FFF+LyhufJrxg7MLztFIuHSkLrlbkaSEp4cZ8kaRYJeFhhkrlSc0BuCzRlLMVqAIaStDFhPsENChrSN4iHRrgyZp88YdwWfg-0rdFCnLvOs+pBd7FF3uYNcp4yTRQmAlM5KMzAhCgabVOZjsJSrXWq7N6BBNJMEIKwDgUA4CIGQOgLAAAmDJm8iaSBBCCDaLgvr0PJvaSsIJ7bmAvu6SQOVvygAAGR0tAGTUQkgAmsyipFaKxKnw4oOR9GYYQ6SEJAqEic9hsW4vxdg+hxFBUeGkE9NeXi3BCtuey4wAQdliqZSygJlZqDCt+S0j6xT7Rys8ENclIVtXStlSq+VyTNnlONW0mY-Qb5PFFX1CVeLvLSpwsRd1iqVZHPsKavoXpAkEKtaDW1QaUlBOkC60NW9E0aPdbSwpuydWssUPqw1t9k1UPgphFC6qtXeucKS31BLvgytWYkYNhzi0NvfI8kVWbtXMtzfmxQ3a9XUoLcgnSni2mttzh86pEy6kdorQZftebB2LoNd+Eda9m2ZLQeIyBPzb5eoMj6qVhKA3pxET8N5HFQAAB8r2NkPX649Z4SJSFMpIFs9oL1GBvXeqtOKa3+qfTEuKn6+VtLedcpoma500TTT9DNC7e1EPSR9cDQ1Pm1N3Z6ztfUENLsQyBNdIbi3htPe+N5ih3W6DQ1Or5KwY3ZttaR8926gKOso066aNGMNFs3c4cM+pDRce+VBkG2b721u6YB2VrpBMQlo-QJtXiZNUrKt6HESykFyn3WGuYUablwa9LoXDK6kOjpTfxyMXCYyztE123Vy6vz4aNTxze4aLOyZqcJ0qXoKq6Gkdpz6dbpMRg89O0gjrvPlQxIDaRoGU0zGAyx6CHaACQmrbOVp5ZKh9daA2JcPjuxTbT8uATwRm8tGWDLqKsIQehGBkPFdVgfUr5xItqc0xsAL1XVr0LRQ1lNJWJErgSiJgmDGvqlJ6zhAAzP14tJWny0DFFHMjn5RsUuzSRuRZ7mtDcnqlQbO6I0DHqa4sGtozXKaEw8M7ARDtARUz56LitbstSa+Bkbpn138ucNkys5c8k2Y29q8TAGpkkT+7PIrKaqlyYw+t0Gxmh1yhcyIGYPM6bYz3dhg9v7ssSZlRj1UzRrsKa-begUoPH3g5iUTvmCDG1zcyXT6WJkNrUGZh6rTw9Y0TZq3Vpnm8Wf02W5bSTvyDa859vznCfWzPFuFxEWWGJ5Zc86zz8b0upuAdm3F4tMw4ETwDuSyl1aj11oDiRQ3ohofFutwzms88dbSQsIURH9ne3G8FyIbuM8Acbljib7NC7A-y8ydPB3c9A+S+zZ7heYesXOFNqoc21uneBxjyDzIf908GL4j972fvckB4XpnzLpDHNLsD6j8Vzh2HretZls3OXxfnJiew23mT2GcO4RVsbdme1LqIQnkQ4b685PXPRm1hLiId5Sf94vNedS0kxAyPEBIMHqrS67yrtfNFZGYMZFf9IcTr5ZDOiX37Kd1434f7o6JV+n6ZBv5LvyR974UXf4-WIn8NBf2crDbfcwaDHUZvAnANT-I-B-E-RkP-c-cLb3PfZkYEKAukH-WA5A1-bHIA55fvJvP9c3VvYYEiZAr-aA9As-VjRA0Ab-BkdtCXHHewbrWrHCerd-IgEue-OkCUBvKXH4GXQDOXJVNpZMHmLgjwHgvvYHPqZg+hXXb7NpcNYSDnDBVqOHb5cSUEZ+RIdDb5EJRgwLDcYiZQ5mFYZJW7NQzzFYTQkEbQ98UnRgJfWg3-TA1kJbEwzfIHcwZhZw-OZwiDZHDYROSlSA8QmAygrA0kecJQjkFQp0cNDNZwv5f5cwaVX3MIyQgjYhc7EpDw+Ii7Y7JQJIoFNxNIzg4-TI35EolI0QyWDItlLIvXXjdkBYOIgA7nN3MTPHf9anNvYw2I0wsndgywsLBHYPD3IfAjdgiSXQ4+MYgfAdFdJzQtFpaFVWWFeFTgJFHgVFNAabTFNHKtEmcmfYS4KfTLRoJoFlVYM43ArYEIS4P8Q6QiS4Eg0oaQa4sQa4Q8BQT+EKYsagdScUTvRPB0fRU4l3UGAAQlAOOIpkUDOM4iTgOJ0xKU0kUDa18xYSswuRAMY28C8h8lDXMNqkxOiz8xxOHHYPRwJMynRMIHONxyyx6LrUIBIk8jpNVhBJ9yazJKzhvEZKYL5x6zZNADYOEIGyaxGwZK62FNq1FKEPz0a1DSynEHai6QFNlK13lN0HkKI0yXDTKWiC8C0HVzxJnyNLaEdRfFmmoLrl2VuUtQCypzrS2RiUtJt2oI9JmhnCdIMKR0UEtSXyLFbHuFIDBEsQ6hnAKRAN7WriVIG04LhUjRjN3xzQCXjJwGYW5WT3NkjK6Xzgr24g3VcwKOTIGA0yo3KX0JAI9BpUrI4wBGoPLPtA0xvFUxdx3zwPnXsxbObNU1bkqg7JMHS27PsF7T7KaM3nSg-lVPVJQgbKiBiwQntFTLHNCE0BBHJj0zSQ5TUU3O3KXLvhCDrMInDRbJ3IDCrIDB-HqBXNVOyI+PDO3I0yMAAB4NznyyZAz9FjyxBmACJFBiIsRaBztSAagbJbDEEt5KhWiNp0hiJQAABqO42qb4UycMuSfYV85CmJEiXC17cwdCgkEELCn8m87I54oCkCogUQSiSCuw3WGC2I+CmJAi7+YizCwgbCxNEJFCx1RClCwireYmEisio8pfVscoSoAI25JZXEu7NpMYFwUoCGNclID6YRVYRc381OB2LovoHPV84SikfQFStEA4CgUMkiucqxaM5pYS9IJZPc9My8qSEy1yo8xyreHeBzNyn8XtCS-ubaGuNyMYFynMs2YyfMyfPSwUACo6eSmJMgRoLyUAINGRIoZOFyRhQKORFgL0fOdIi8uZEebNLS9sr0AIocr0ZImBFswcyqnINdZeN2EA5SqStS14KcoSTCWShuJKqIBSt7FNDq1SyywwOKy6FNCqnSm8qatMt1Iy3iu+SYUy8Qcyrqo8WgMMiM7KOy-Kdmby5yzlaKEPFajy5MH4BdJc681apaHykRPy183QQK38zKlIRyUKhScK060ASKlPaK-aqM3wBa2ZBKwiJK0iUgVKiUdKwq5iQyUtRnYKl6QeHKwqZhFsoqpM1TCaj6rYUGCqhqtsvs6ooqBqoaGq5qgm1eOm9csaiyzM-AMAGFFgdgLY7gFFPgXAEsw4kyMyGgdSIkqhY6UgQU0AgglvMWkiZSVSIWz09guW8yJwFSBYYvVQpKALAM-yA5ZhZWhWkWokVRQw-bQIW1ftR1CwftFKOqiwW1fNK28wfNW2oFW1U8p20AU812-kW1bBT27BH2ooW1JashR1UO6QD4O21ImfSUBgBYSQGoR1OOhOiCrYaO024iZ4p2540MDO21G0cmWYeoBgZJQusmYupgSYfOmfJCz2iwBE3QGoIwSKWGBiFCtOmuoLRieu8wRu0AZu6JBiFiTut2mfRiSAp2hiAIVuiwFiaeruowpJXQFIfuwe2ehiWJAe8wReoC4AXuhSV4gelutu0AMAUe32mfAAUgPrXpPtAAYivu3tAF3uIlOvrrvqHpcubrHqCyhM5Q-qPvXtPv-uih-svqCzfNvqAfvoYg-PMHAeDpnzfMil7s-o3tABQYQdfuhmgabtgdAFhmwd-qMOhlQZXoCHQdPrIeIYgaMKhIPofsCFnvMBhPMDOP5G6n1tMnlsBIshVI0yigmGAX7V0ANr4aNuPi4fyvEeFriloHqAACsfjVFhHdNBBol3aeHzJHUdakodISjZH+GqEDEsyZHtHDamMTbpVbUnYIVHU7GXYM7-lbVIBSBnY3Ak6V63GPGbpnGZkC75AK7YBIAnby6nAQn-HGlAmi6ABRT28J2JqJ0omfAAOUkFSYPvSdSfuu-mkdfC9osYkaY2qqEYCGAXIGiQXXIB-CMeWzfEDm4m4cFuKe23fCprKaAV00qdnoDJqdqaKeFqse6j5vsCMgFt4bkdVhlsguwQlvGYJH3wPGYBEhssUckCkG3lMhTzNtDDqbVo+PXE1vFvJsCAkjmaRM1X1M3iupkpipnAlpnMynufynfh4LqbikrOEuajqZKZeu+Y+DeYCQ+aawUeUaoBcRSI+F+baYnWiDjgBa2ABrzOBq6RaWzOZScBBFbDvJJ1RfXCEV6iqBeY3BGY+mIGTBxGUnyhuDUGbgwpBF0DBZ+KtQ+jZE4pBBpCUZZamspQ5O8nROZaoFyfvhiTfP5cYk0lwbO1FBBdDS5fBbGlShCGIjfKMcldVmlaKllepUIiFaVZShVYAG1BL-qlsOW+17N9Wg5+KSIAWUL2XRLwy-LrWjB+KABdYiGVkShlsi61xOFeCwFOl0fYYiZicNiNyNqN6Nnu05wpulisBl3C4iAAHXC1wsdYZYVZ5f4rTabRwApZ9GpaML3koFUFJgQt0EbCLlKmTCAowFwrRU4g4jjcmG5WxYUYiBJZHSAA","body":"function user_print(string, object) {\n    function prepare(object) {\n        return is_compound_function(object)\n               ? \"< compound-function >\"\n               : is_primitive_function(object)\n               ? \"< primitive-function >\"\n               : is_pair(object)\n               ? pair(prepare(head(object)),\n                      prepare(tail(object)))\n               : object;\n    }\n    display(string + \" \" + stringify(prepare(object)));\n} "}]},{"tag":"TEXT","id":"#p9","child":[{"body":"\n    Now all we need to do to run the evaluator is to initialize the global\n    environment and start the driver loop.  Here is a sample interaction:\n    ","tag":"#text"},{"tag":"SNIPPET","latex":false,"id":8,"eval":true,"prependLength":518,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqTtCFZ7QHd5Ng4CIKIrW5hI+1n4hqi0BCrDm8I5+KO139nO44Ty1PZmSahuLrPS5z37RCDmSBVBzPs511vE4cpyU47j5Q-zS3iwK2rbmb6PdetyvnmryY+Ic3j+KEFZQAYJYV1oUmPyPKCVlrOEkmDwnnA1otM1PjnQB2chyGINgwupXZNHFRrmsCUgwukL-v4WHBtbHe3R96QRPNCABgDAhXwzL7dcJ8ng6T-DMCBQFULzi+BudBRJfSdC-KzO+6Rf7SGkMrdegk1ZKj7O2IiQNh6gHTqABK+daFlHirQaM35E7MNbEsAM+dt6SF3uAz8R9oSKASt1NO0IIpkAQvcJCG0mDRWwb8JwCjMIbWdG2GQdkJijyONeBKSMMreTarlFC-D9HQJgYArRSiXaAxqvYj47MKEfXUT9Rx1BlHimtn6JoUlz69QMsAjo-oYagGIgAKl8f42JxFdCROCSjShRJ0KTTLn7fKOF9aMNBjaO0Th66tCUEXSaVxjSmm5KzOxbj3GvHSe9VW6FFF+LyhufJrxg7MLztFIuHSkLrlbkaSEp4cZ8kaRYJeFhhkrlSc0BuCzRlLMVqAIaStDFhPsENChrSN4iHRrgyZp88YdwWfg-0rdFCnLvOs+pBd7FF3uYNcp4yTRQmAlM5KMzAhCgabVOZjsJSrXWq7N6BBNJMEIKwDgUA4CIGQOgLAAAmDJm8iaSBBCCDaLgvr0PJvaSsIJ7bmAvu6SQOVvygAAGR0tAGTUQkgAmsyipFaKxKnw4oOR9GYYQ6SEJAqEic9hsW4vxdg+hxFBUeGkE9NeXi3BCtuey4wAQdliqZSygJlZqDCt+S0j6xT7Rys8ENclIVtXStlSq+VyTNnlONW0mY-Qb5PFFX1CVeLvLSpwsRd1iqVZHPsKavoXpAkEKtaDW1QaUlBOkC60NW9E0aPdbSwpuydWssUPqw1t9k1UPgphFC6qtXeucKS31BLvgytWYkYNhzi0NvfI8kVWbtXMtzfmxQ3a9XUoLcgnSni2mttzh86pEy6kdorQZftebB2LoNd+Eda9m2ZLQeIyBPzb5eoMj6qVhKA3pxET8N5HFQAAB8r2NkPX649Z4SJSFMpIFs9oL1GBvXeqtOKa3+qfTEuKn6+VtLedcpoma500TTT9DNC7e1EPSR9cDQ1Pm1N3Z6ztfUENLsQyBNdIbi3htPe+N5ih3W6DQ1Or5KwY3ZttaR8926gKOso066aNGMNFs3c4cM+pDRce+VBkG2b721u6YB2VrpBMQlo-QJtXiZNUrKt6HESykFyn3WGuYUablwa9LoXDK6kOjpTfxyMXCYyztE123Vy6vz4aNTxze4aLOyZqcJ0qXoKq6Gkdpz6dbpMRg89O0gjrvPlQxIDaRoGU0zGAyx6CHaACQmrbOVp5ZKh9daA2JcPjuxTbT8uATwRm8tGWDLqKsIQehGBkPFdVgfUr5xItqc0xsAL1XVr0LRQ1lNJWJErgSiJgmDGvqlJ6zhAAzP14tJWny0DFFHMjn5RsUuzSRuRZ7mtDcnqlQbO6I0DHqa4sGtozXKaEw8M7ARDtARUz56LitbstSa+Bkbpn138ucNkys5c8k2Y29q8TAGpkkT+7PIrKaqlyYw+t0Gxmh1yhcyIGYPM6bYz3dhg9v7ssSZlRj1UzRrsKa-begUoPH3g5iUTvmCDG1zcyXT6WJkNrUGZh6rTw9Y0TZq3Vpnm8Wf02W5bSTvyDa859vznCfWzPFuFxEWWGJ5Zc86zz8b0upuAdm3F4tMw4ETwDuSyl1aj11oDiRQ3ohofFutwzms88dbSQsIURH9ne3G8FyIbuM8Acbljib7NC7A-y8ydPB3c9A+S+zZ7heYesXOFNqoc21uneBxjyDzIf908GL4j972fvckB4XpnzLpDHNLsD6j8Vzh2HretZls3OXxfnJiew23mT2GcO4RVsbdme1LqIQnkQ4b685PXPRm1hLiId5Sf94vNedS0kxAyPEBIMHqrS67yrtfNFZGYMZFf9IcTr5ZDOiX37Kd1434f7o6JV+n6ZBv5LvyR974UXf4-WIn8NBf2crDbfcwaDHUZvAnANT-I-B-E-RkP-c-cLb3PfZkYEKAukH-WA5A1-bHIA55fvJvP9c3VvYYEiZAr-aA9As-VjRA0Ab-BkdtCXHHewbrWrHCerd-IgEue-OkCUBvKXH4GXQDOXJVNpZMHmLgjwHgvvYHPqZg+hXXb7NpcNYSDnDBVqOHb5cSUEZ+RIdDb5EJRgwLDcYiZQ5mFYZJW7NQzzFYTQkEbQ98UnRgJfWg3-TA1kJbEwzfIHcwZhZw-OZwiDZHDYROSlSA8QmAygrA0kecJQjkFQp0cNDNZwv5f5cwaVX3MIyQgjYhc7EpDw+Ii7Y7JQJIoFNxNIzg4-TI35EolI0QyWDItlLIvXXjdkBYOIgA7nN3MTPHf9anNvYw2I0wsndgywsLBHYPD3IfAjdgiSXQ4+MYgfAdFdJzQtFpaFVWWFeFTgJFHgVFNAabTFNHKtEmcmfYS4KfTLRoJoFlVYM43ArYEIS4P8Q6QiS4Eg0oaQa4sQa4Q8BQT+EKYsagdScUTvRPB0fRU4l3UGAAQlAOOIpkUDOM4iTgOJ0xKU0kUDa18xYSswuRAMY28C8h8lDXMNqkxOiz8xxOHHYPRwJMynRMIHONxyyx6LrUIBIk8jpNVhBJ9yazJKzhvEZKYL5x6zZNADYOEIGyaxGwZK62FNq1FKEPz0a1DSynEHai6QFNlK13lN0HkKI0yXDTKWiC8C0HVzxJnyNLaEdRfFmmoLrl2VuUtQCypzrS2RiUtJt2oI9JmhnCdIMKR0UEtSXyLFbHuFIDBEsQ6hnAKRAN7WriVIG04LhUjRjN3xzQCXjJwGYW5WT3NkjK6Xzgr24g3VcwKOTIGA0yo3KX0JAI9BpUrI4wBGoPLPtA0xvFUxdx3zwPnXsxbObNU1bkqg7JMHS27PsF7T7KaM3nSg-lVPVJQgbKiBiwQntFTLHNCE0BBHJj0zSQ5TUU3O3KXLvhCDrMInDRbJ3IDCrIDB-HqBXNVOyI+PDO3I0yMAAB4NznyyZAz9FjyxBmACJFBiIsRaBztSAagbJbDEEt5KhWiNp0hiJQAABqO42qb4UycMuSfYV85CmJEiXC17cwdCgkEELCn8m87I54oCkCogUQSiSCuw3WGC2I+CmJAi7+YizCwgbCxNEJFCx1RClCwireYmEisio8pfVscoSoAI25JZXEu7NpMYFwUoCGNclID6YRVYRc381OB2LovoHPV84SikfQFStEA4CgUMkiucqxaM5pYS9IJZPc9My8qSEy1yo8xyreHeBzNyn8XtCS-ubaGuNyMYFynMs2YyfMyfPSwUACo6eSmJMgRoLyUAINGRIoZOFyRhQKORFgL0fOdIi8uZEebNLS9sr0AIocr0ZImBFswcyqnINdZeN2EA5SqStS14KcoSTCWShuJKqIBSt7FNDq1SyywwOKy6FNCqnSm8qatMt1Iy3iu+SYUy8Qcyrqo8WgMMiM7KOy-Kdmby5yzlaKEPFajy5MH4BdJc681apaHykRPy183QQK38zKlIRyUKhScK060ASKlPaK-aqM3wBa2ZBKwiJK0iUgVKiUdKwq5iQyUtRnYKl6QeHKwqZhFsoqpM1TCaj6rYUGCqhqtsvs6ooqBqoaGq5qgm1eOm9csaiyzM-AMAGFFgdgLY7gFFPgXAEsw4kyMyGgdSIkqhY6UgQU0AgglvMWkiZSVSIWz09guW8yJwFSBYYvVQpKALAM-yA5ZhZWhWkWokVRQw-bQIW1ftR1CwftFKOqiwW1fNK28wfNW2oFW1U8p20AU812-kW1bBT27BH2ooW1JashR1UO6QD4O21ImfSUBgBYSQGoR1OOhOiCrYaO024iZ4p2540MDO21G0cmWYeoBgZJQusmYupgSYfOmfJCz2iwBE3QGoIwSKWGBiFCtOmuoLRieu8wRu0AZu6JBiFiTut2mfRiSAp2hiAIVuiwFiaeruowpJXQFIfuwe2ehiWJAe8wReoC4AXuhSV4gelutu0AMAUe32mfAAUgPrXpPtAAYivu3tAF3uIlOvrrvqHpcubrHqCyhM5Q-qPvXtPv-uih-svqCzfNvqAfvoYg-PMHAeDpnzfMil7s-o3tABQYQdfuhmgabtgdAFhmwd-qMOhlQZXoCHQdPrIeIYgaMKhIPofsCFnvMBhPMDOP5G6n1tMnlsBIshVI0yigmGAX7V0ANr4aNuPi4fyvEeFriloHqAACsfjVFhHdNBBol3aeHzJHUdakodISjZH+GqEDEsyZHtHDamMTbpVbUnYIVHU7GXYM7-lbVIBSBnY3Ak6V63GPGbpnGZkC75AK7YBIAnby6nAQn-HGlAmi6ABRT28J2JqJ0omfAAOUkFSYPvSdSfuu-mkdfC9osYkaY2qqEYCGAXIGiQXXIB-CMeWzfEDm4m4cFuKe23fCprKaAV00qdnoDJqdqaKeFqse6j5vsCMgFt4bkdVhlsguwQlvGYJH3wPGYBEhssUckCkG3lMhTzNtDDqbVo+PXE1vFvJsCAkjmaRM1X1M3iupkpipnAlpnMynufynfh4LqbikrOEuajqZKZeu+Y+DeYCQ+aawUeUaoBcRSI+F+baYnWiDjgBa2ABrzOBq6RaWzOZScBBFbDvJJ1RfXCEV6iqBeY3BGY+mIGTBxGUnyhuDUGbgwpBF0DBZ+KtQ+jZE4pBBpCUZZamspQ5O8nROZaoFyfvhiTfP5cYk0lwbO1FBBdDS5fBbGlShCGIjfKMcldVmlaKllepUIiFaVZShVYAG1BL-qlsOW+17N9Wg5+KSIAWUL2XRLwy-LrWjB+KABdYiGVkShlsi61xOFeCwFOl0fYYiZicNiNyNqN6Nnu05wpulisBl3C4iAAHXC1wsdYZYVZ5f4rTabVGdAApZ9CsFzVpbNkTZIolrLZ2erfpcrb1vyoJFUH3lrfzmIgAFlGIw4HBSBm3KAEKmn8q95KA+2TI6W23O3u2hoB2UTQBxRTJ1IcROr8a+lG3e3SZ84i2cQS2Akm2W34UU8Cba5s8yFFJ12kgrUAhg3E6gLw24ZsR-qMRVJCQNp7pY2YlFUB5doh5LRr3Q2Y2APAPY3bs92fhW3c302ULQPk283aaLBuHaAQQyp85Spkwz2+24PvD8qbFBFootKwFmMCsgJARaWkPshMOmF8qElnF85vFehqOdEcODE8qCnSOypVT84nmLF8WZxEWPgmPdAGPxQ9ZurLQfDSY+3OP-hqQ2PsgxHWAyO2AHzUbC3KWBb8ph3R3a2mWJPSYKPQZ52+Gl3xrZOlPSrkS+JiJypJByAcon5jx73mAShWUNpiJizDPF3Nq81MXsWFGIgSWuIgA","body":"const the_global_environment = setup_environment();\ndriver_loop(the_global_environment); "},{"tag":"SNIPPET","latex":false,"id":9,"eval":true,"body":"function append(xs, ys) { \n    return is_null(xs)\n           ? ys\n           : pair(head(xs), append(tail(xs), ys)); \n} ","prependLength":520,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqTtCFZ7QHd5Ng4CIKIrW5hI+1n4hqi0BCrDm8I5+KO139nO44Ty1PZmSahuLrPS5z37RCDmSBVBzPs511vE4cpyU47j5Q-zS3iwK2rbmb6PdetyvnmryY+Ic3j+KEFZQAYJYV1oUmPyPKCVlrOEkmDwnnA1otM1PjnQB2chyGINgwupXZNHFRrmsCUgwukL-v4WHBtbHe3R96QRPNCABgDAhXwzL7dcJ8ng6T-DMCBQFULzi+BudBRJfSdC-KzO+6Rf7SGkMrdegk1ZKj7O2IiQNh6gHTqABK+daFlHirQaM35E7MNbEsAM+dt6SF3uAz8R9oSKASt1NO0IIpkAQvcJCG0mDRWwb8JwCjMIbWdG2GQdkJijyONeBKSMMreTarlFC-D9HQJgYArRSiXaAxqvYj47MKEfXUT9Rx1BlHimtn6JoUlz69QMsAjo-oYagGIgAKl8f42JxFdCROCSjShRJ0KTTLn7fKOF9aMNBjaO0Th66tCUEXSaVxjSmm5KzOxbj3GvHSe9VW6FFF+LyhufJrxg7MLztFIuHSkLrlbkaSEp4cZ8kaRYJeFhhkrlSc0BuCzRlLMVqAIaStDFhPsENChrSN4iHRrgyZp88YdwWfg-0rdFCnLvOs+pBd7FF3uYNcp4yTRQmAlM5KMzAhCgabVOZjsJSrXWq7N6BBNJMEIKwDgUA4CIGQOgLAAAmDJm8iaSBBCCDaLgvr0PJvaSsIJ7bmAvu6SQOVvygAAGR0tAGTUQkgAmsyipFaKxKnw4oOR9GYYQ6SEJAqEic9hsW4vxdg+hxFBUeGkE9NeXi3BCtuey4wAQdliqZSygJlZqDCt+S0j6xT7Rys8ENclIVtXStlSq+VyTNnlONW0mY-Qb5PFFX1CVeLvLSpwsRd1iqVZHPsKavoXpAkEKtaDW1QaUlBOkC60NW9E0aPdbSwpuydWssUPqw1t9k1UPgphFC6qtXeucKS31BLvgytWYkYNhzi0NvfI8kVWbtXMtzfmxQ3a9XUoLcgnSni2mttzh86pEy6kdorQZftebB2LoNd+Eda9m2ZLQeIyBPzb5eoMj6qVhKA3pxET8N5HFQAAB8r2NkPX649Z4SJSFMpIFs9oL1GBvXeqtOKa3+qfTEuKn6+VtLedcpoma500TTT9DNC7e1EPSR9cDQ1Pm1N3Z6ztfUENLsQyBNdIbi3htPe+N5ih3W6DQ1Or5KwY3ZttaR8926gKOso066aNGMNFs3c4cM+pDRce+VBkG2b721u6YB2VrpBMQlo-QJtXiZNUrKt6HESykFyn3WGuYUablwa9LoXDK6kOjpTfxyMXCYyztE123Vy6vz4aNTxze4aLOyZqcJ0qXoKq6Gkdpz6dbpMRg89O0gjrvPlQxIDaRoGU0zGAyx6CHaACQmrbOVp5ZKh9daA2JcPjuxTbT8uATwRm8tGWDLqKsIQehGBkPFdVgfUr5xItqc0xsAL1XVr0LRQ1lNJWJErgSiJgmDGvqlJ6zhAAzP14tJWny0DFFHMjn5RsUuzSRuRZ7mtDcnqlQbO6I0DHqa4sGtozXKaEw8M7ARDtARUz56LitbstSa+Bkbpn138ucNkys5c8k2Y29q8TAGpkkT+7PIrKaqlyYw+t0Gxmh1yhcyIGYPM6bYz3dhg9v7ssSZlRj1UzRrsKa-begUoPH3g5iUTvmCDG1zcyXT6WJkNrUGZh6rTw9Y0TZq3Vpnm8Wf02W5bSTvyDa859vznCfWzPFuFxEWWGJ5Zc86zz8b0upuAdm3F4tMw4ETwDuSyl1aj11oDiRQ3ohofFutwzms88dbSQsIURH9ne3G8FyIbuM8Acbljib7NC7A-y8ydPB3c9A+S+zZ7heYesXOFNqoc21uneBxjyDzIf908GL4j972fvckB4XpnzLpDHNLsD6j8Vzh2HretZls3OXxfnJiew23mT2GcO4RVsbdme1LqIQnkQ4b685PXPRm1hLiId5Sf94vNedS0kxAyPEBIMHqrS67yrtfNFZGYMZFf9IcTr5ZDOiX37Kd1434f7o6JV+n6ZBv5LvyR974UXf4-WIn8NBf2crDbfcwaDHUZvAnANT-I-B-E-RkP-c-cLb3PfZkYEKAukH-WA5A1-bHIA55fvJvP9c3VvYYEiZAr-aA9As-VjRA0Ab-BkdtCXHHewbrWrHCerd-IgEue-OkCUBvKXH4GXQDOXJVNpZMHmLgjwHgvvYHPqZg+hXXb7NpcNYSDnDBVqOHb5cSUEZ+RIdDb5EJRgwLDcYiZQ5mFYZJW7NQzzFYTQkEbQ98UnRgJfWg3-TA1kJbEwzfIHcwZhZw-OZwiDZHDYROSlSA8QmAygrA0kecJQjkFQp0cNDNZwv5f5cwaVX3MIyQgjYhc7EpDw+Ii7Y7JQJIoFNxNIzg4-TI35EolI0QyWDItlLIvXXjdkBYOIgA7nN3MTPHf9anNvYw2I0wsndgywsLBHYPD3IfAjdgiSXQ4+MYgfAdFdJzQtFpaFVWWFeFTgJFHgVFNAabTFNHKtEmcmfYS4KfTLRoJoFlVYM43ArYEIS4P8Q6QiS4Eg0oaQa4sQa4Q8BQT+EKYsagdScUTvRPB0fRU4l3UGAAQlAOOIpkUDOM4iTgOJ0xKU0kUDa18xYSswuRAMY28C8h8lDXMNqkxOiz8xxOHHYPRwJMynRMIHONxyyx6LrUIBIk8jpNVhBJ9yazJKzhvEZKYL5x6zZNADYOEIGyaxGwZK62FNq1FKEPz0a1DSynEHai6QFNlK13lN0HkKI0yXDTKWiC8C0HVzxJnyNLaEdRfFmmoLrl2VuUtQCypzrS2RiUtJt2oI9JmhnCdIMKR0UEtSXyLFbHuFIDBEsQ6hnAKRAN7WriVIG04LhUjRjN3xzQCXjJwGYW5WT3NkjK6Xzgr24g3VcwKOTIGA0yo3KX0JAI9BpUrI4wBGoPLPtA0xvFUxdx3zwPnXsxbObNU1bkqg7JMHS27PsF7T7KaM3nSg-lVPVJQgbKiBiwQntFTLHNCE0BBHJj0zSQ5TUU3O3KXLvhCDrMInDRbJ3IDCrIDB-HqBXNVOyI+PDO3I0yMAAB4NznyyZAz9FjyxBmACJFBiIsRaBztSAagbJbDEEt5KhWiNp0hiJQAABqO42qb4UycMuSfYV85CmJEiXC17cwdCgkEELCn8m87I54oCkCogUQSiSCuw3WGC2I+CmJAi7+YizCwgbCxNEJFCx1RClCwireYmEisio8pfVscoSoAI25JZXEu7NpMYFwUoCGNclID6YRVYRc381OB2LovoHPV84SikfQFStEA4CgUMkiucqxaM5pYS9IJZPc9My8qSEy1yo8xyreHeBzNyn8XtCS-ubaGuNyMYFynMs2YyfMyfPSwUACo6eSmJMgRoLyUAINGRIoZOFyRhQKORFgL0fOdIi8uZEebNLS9sr0AIocr0ZImBFswcyqnINdZeN2EA5SqStS14KcoSTCWShuJKqIBSt7FNDq1SyywwOKy6FNCqnSm8qatMt1Iy3iu+SYUy8Qcyrqo8WgMMiM7KOy-Kdmby5yzlaKEPFajy5MH4BdJc681apaHykRPy183QQK38zKlIRyUKhScK060ASKlPaK-aqM3wBa2ZBKwiJK0iUgVKiUdKwq5iQyUtRnYKl6QeHKwqZhFsoqpM1TCaj6rYUGCqhqtsvs6ooqBqoaGq5qgm1eOm9csaiyzM-AMAGFFgdgLY7gFFPgXAEsw4kyMyGgdSIkqhY6UgQU0AgglvMWkiZSVSIWz09guW8yJwFSBYYvVQpKALAM-yA5ZhZWhWkWokVRQw-bQIW1ftR1CwftFKOqiwW1fNK28wfNW2oFW1U8p20AU812-kW1bBT27BH2ooW1JashR1UO6QD4O21ImfSUBgBYSQGoR1OOhOiCrYaO024iZ4p2540MDO21G0cmWYeoBgZJQusmYupgSYfOmfJCz2iwBE3QGoIwSKWGBiFCtOmuoLRieu8wRu0AZu6JBiFiTut2mfRiSAp2hiAIVuiwFiaeruowpJXQFIfuwe2ehiWJAe8wReoC4AXuhSV4gelutu0AMAUe32mfAAUgPrXpPtAAYivu3tAF3uIlOvrrvqHpcubrHqCyhM5Q-qPvXtPv-uih-svqCzfNvqAfvoYg-PMHAeDpnzfMil7s-o3tABQYQdfuhmgabtgdAFhmwd-qMOhlQZXoCHQdPrIeIYgaMKhIPofsCFnvMBhPMDOP5G6n1tMnlsBIshVI0yigmGAX7V0ANr4aNuPi4fyvEeFriloHqAACsfjVFhHdNBBol3aeHzJHUdakodISjZH+GqEDEsyZHtHDamMTbpVbUnYIVHU7GXYM7-lbVIBSBnY3Ak6V63GPGbpnGZkC75AK7YBIAnby6nAQn-HGlAmi6ABRT28J2JqJ0omfAAOUkFSYPvSdSfuu-mkdfC9osYkaY2qqEYCGAXIGiQXXIB-CMeWzfEDm4m4cFuKe23fCprKaAV00qdnoDJqdqaKeFqse6j5vsCMgFt4bkdVhlsguwQlvGYJH3wPGYBEhssUckCkG3lMhTzNtDDqbVo+PXE1vFvJsCAkjmaRM1X1M3iupkpipnAlpnMynufynfh4LqbikrOEuajqZKZeu+Y+DeYCQ+aawUeUaoBcRSI+F+baYnWiDjgBa2ABrzOBq6RaWzOZScBBFbDvJJ1RfXCEV6iqBeY3BGY+mIGTBxGUnyhuDUGbgwpBF0DBZ+KtQ+jZE4pBBpCUZZamspQ5O8nROZaoFyfvhiTfP5cYk0lwbO1FBBdDS5fBbGlShCGIjfKMcldVmlaKllepUIiFaVZShVYAG1BL-qlsOW+17N9Wg5+KSIAWUL2XRLwy-LrWjB+KABdYiGVkShlsi61xOFeCwFOl0fYYiZicNiNyNqN6Nnu05wpulisBl3C4iAAHXC1wsdYZYVZ5f4rTabVGdAApZ9CsFzVpbNkTZIolrLZ2erfpcrb1vyoJFUH3lrfzmIgAFlGIw4HBSBm3KAEKmn8q95KA+2TI6W23O3u2hoB2UTQBxRTJ1IcROr8a+lG3e3SZ84i2cQS2Akm2W34UU8Cba5s8yFFJ12kgrUAhg3E6gLw24ZsR-qMRVJCQNp7pY2YlFUB5doh5LRr3Q2Y2APAPY3bs92fhW3c302ULQPk283aaLBuHaAQQyp85Spkwz2+24PvD8qbFBFootKwFmMCsgJARaWkPshMOmF8qElnF85vFehqOdEcODE8qCnSOypVT84nmLF8WZxEWPgmPdAGPxQ9ZurLQfDSY+3OP-hqQ2PsgxHWAyO2AHzUbC3KWBb8ph3R3a2mWJPSYKPQZ52+Gl3xrZOlPSrkS+JiJypJByAcon5jx73mAShWUNpiJizDPF3Nq81MXsWFGIgSWRmCBPMYkAAlMgRCrEES4ECKYlOdhdjEEoNEFm0ASd6ThQHtvt1IZLj6IFhEwGGofQxvJkivPLowEIArpsU8y13NS4OOQyeYD+Py2rn8ArkdZEggVL4xFyad5LxxjaPADrrttLlyUDrLggXL21SQAS+oAS8gDiXQW1YEkiG3EiQgDibqQbqd8pMbsAE1qb3QE1mbg74iOb47pb0AE1lbi74iNb3QCvd1h7x7oAA","output":"M-evaluate value:\nundefined"},{"tag":"SNIPPET","latex":false,"id":10,"eval":true,"body":"append(list(\"a\", \"b\", \"c\"), list(\"d\", \"e\", \"f\")); ","prependLength":520,"program":"chap=4&prgrm=PTAEGUEkGEAVQFLlAFgHQEY0oFA5KAGYCuAdgMYAuAlgPakDORATrQLYQzxKqaZ4kKNeqACmANwCGAG2KTKogBTl2AB3qjSlADRjS4gJSgA3jlDnQzUZWLNSoagwD606guYzlajVoNmLARYA-KCu7jJOUrJKKmzqpJqUfoEpAFwOzqSSbDHeCb7+KcGhtLQA1sSqTgwAnmwARrTSkTLESrUNTU60hE5ZOV5xPkm6moaFRaDpjk6Sqqqu5PJ0pIPxicmT5iFzCzWKEq3ySoJUK06iAB6qVgwMK2vDBqP6zxNbKa4MlN29UW0MRSSZgAcwu11u93ogNi618L0Mmy202ctFUog8lFozCcsXq1CywlWsKe7xSIUOsmOijRGPk2Nx7HxhPOWNm80Wy3oj3yIzJHxSYyRkxRjNIABM3CtPCTecKihSomLJUSZXlEgj5WkMi5svVxZJwTdRHcHrKNvyAiE2JIyqInKciYppHqDU5VMDstYMdU6o1pDD1fDLQLJi6Gm7GuL9ub4XpxgLRQxRABHNoUXJDOUh7ZiJXJtOacjtVPp4vVSjHHJaQNZjaanNTHX1aS0chlHkWgWKiIttsd2M6eNawKiqw2OwVquJTsFbt5iLj2ykKcKauUWdDoWN0WO87i0TkF2Ys1BpKNntUhSKPf0JwHo9ONkqRiVrT3w-STfPYc7nUP48uWJM8RytBdmgAz0nUHBtEx1SRTRBUh12-C9wNmRDkJnGDfzgjFWGYTddAAIjIMpSFoAB3exai0SRLlAABaRjwLkBRiIMABuHAAF8BDIM4RF2aR9kEXRgRBBgjFMAJqEIUBFBmG5qDYKVxHtW9VkEAxpMtJc7FAYSandZgVLUjSBKdMTDNBKTuICHixADUQHHkxTnBJMhxQdSyHm03TJhfb5LBNYhpEoUAAF5WOpTSnCjUSyDeUMUqKK4FAlC59GoVgsK0RRG1SgU4o9DwcncQFtO0Qqiq2CSGGq2qmosOKxhy+gUP8ri9OsZcdX0ld-iUW4wvPIqQgGlpojFDKNxG8LQKKdIvNEQgCVEcV7IsRzRGckxLXw7EbzIEiyIo6iiF8kRKBqdEmJYoyOK28w+L4nBNNCRwfh6KaAQOa4GuHfaAgG0AbVUIFQSigA+GLrwkzVRgB7q3o+yllSleg1TrLRNWBixQZmShmGISgAAt9kpNjcglTGsmaY1JSWa9Bx-IVFtzKnqRfFVpWaILS2wkDYI+dIuZZ+heax5oZHcFl1O-TVuNRq77HRgsy3aSg2EoQGhXx8w5IUmZRDiG7qkFjNFG+HWpICopQZWtaEk2iYdr2o33N1b5V1Nmcbd1nSDcCUHxZOHKfe+ad8oDqTtCFZ7QHd5Ng4CIKIrW5hI+1n4hqi0BCrDm8I5+KO139nO44Ty1PZmSahuLrPS5z37RCDmSBVBzPs511vE4cpyU47j5Q-zS3iwK2rbmb6PdetyvnmryY+Ic3j+KEFZQAYJYV1oUmPyPKCVlrOEkmDwnnA1otM1PjnQB2chyGINgwupXZNHFRrmsCUgwukL-v4WHBtbHe3R96QRPNCABgDAhXwzL7dcJ8ng6T-DMCBQFULzi+BudBRJfSdC-KzO+6Rf7SGkMrdegk1ZKj7O2IiQNh6gHTqABK+daFlHirQaM35E7MNbEsAM+dt6SF3uAz8R9oSKASt1NO0IIpkAQvcJCG0mDRWwb8JwCjMIbWdG2GQdkJijyONeBKSMMreTarlFC-D9HQJgYArRSiXaAxqvYj47MKEfXUT9Rx1BlHimtn6JoUlz69QMsAjo-oYagGIgAKl8f42JxFdCROCSjShRJ0KTTLn7fKOF9aMNBjaO0Th66tCUEXSaVxjSmm5KzOxbj3GvHSe9VW6FFF+LyhufJrxg7MLztFIuHSkLrlbkaSEp4cZ8kaRYJeFhhkrlSc0BuCzRlLMVqAIaStDFhPsENChrSN4iHRrgyZp88YdwWfg-0rdFCnLvOs+pBd7FF3uYNcp4yTRQmAlM5KMzAhCgabVOZjsJSrXWq7N6BBNJMEIKwDgUA4CIGQOgLAAAmDJm8iaSBBCCDaLgvr0PJvaSsIJ7bmAvu6SQOVvygAAGR0tAGTUQkgAmsyipFaKxKnw4oOR9GYYQ6SEJAqEic9hsW4vxdg+hxFBUeGkE9NeXi3BCtuey4wAQdliqZSygJlZqDCt+S0j6xT7Rys8ENclIVtXStlSq+VyTNnlONW0mY-Qb5PFFX1CVeLvLSpwsRd1iqVZHPsKavoXpAkEKtaDW1QaUlBOkC60NW9E0aPdbSwpuydWssUPqw1t9k1UPgphFC6qtXeucKS31BLvgytWYkYNhzi0NvfI8kVWbtXMtzfmxQ3a9XUoLcgnSni2mttzh86pEy6kdorQZftebB2LoNd+Eda9m2ZLQeIyBPzb5eoMj6qVhKA3pxET8N5HFQAAB8r2NkPX649Z4SJSFMpIFs9oL1GBvXeqtOKa3+qfTEuKn6+VtLedcpoma500TTT9DNC7e1EPSR9cDQ1Pm1N3Z6ztfUENLsQyBNdIbi3htPe+N5ih3W6DQ1Or5KwY3ZttaR8926gKOso066aNGMNFs3c4cM+pDRce+VBkG2b721u6YB2VrpBMQlo-QJtXiZNUrKt6HESykFyn3WGuYUablwa9LoXDK6kOjpTfxyMXCYyztE123Vy6vz4aNTxze4aLOyZqcJ0qXoKq6Gkdpz6dbpMRg89O0gjrvPlQxIDaRoGU0zGAyx6CHaACQmrbOVp5ZKh9daA2JcPjuxTbT8uATwRm8tGWDLqKsIQehGBkPFdVgfUr5xItqc0xsAL1XVr0LRQ1lNJWJErgSiJgmDGvqlJ6zhAAzP14tJWny0DFFHMjn5RsUuzSRuRZ7mtDcnqlQbO6I0DHqa4sGtozXKaEw8M7ARDtARUz56LitbstSa+Bkbpn138ucNkys5c8k2Y29q8TAGpkkT+7PIrKaqlyYw+t0Gxmh1yhcyIGYPM6bYz3dhg9v7ssSZlRj1UzRrsKa-begUoPH3g5iUTvmCDG1zcyXT6WJkNrUGZh6rTw9Y0TZq3Vpnm8Wf02W5bSTvyDa859vznCfWzPFuFxEWWGJ5Zc86zz8b0upuAdm3F4tMw4ETwDuSyl1aj11oDiRQ3ohofFutwzms88dbSQsIURH9ne3G8FyIbuM8Acbljib7NC7A-y8ydPB3c9A+S+zZ7heYesXOFNqoc21uneBxjyDzIf908GL4j972fvckB4XpnzLpDHNLsD6j8Vzh2HretZls3OXxfnJiew23mT2GcO4RVsbdme1LqIQnkQ4b685PXPRm1hLiId5Sf94vNedS0kxAyPEBIMHqrS67yrtfNFZGYMZFf9IcTr5ZDOiX37Kd1434f7o6JV+n6ZBv5LvyR974UXf4-WIn8NBf2crDbfcwaDHUZvAnANT-I-B-E-RkP-c-cLb3PfZkYEKAukH-WA5A1-bHIA55fvJvP9c3VvYYEiZAr-aA9As-VjRA0Ab-BkdtCXHHewbrWrHCerd-IgEue-OkCUBvKXH4GXQDOXJVNpZMHmLgjwHgvvYHPqZg+hXXb7NpcNYSDnDBVqOHb5cSUEZ+RIdDb5EJRgwLDcYiZQ5mFYZJW7NQzzFYTQkEbQ98UnRgJfWg3-TA1kJbEwzfIHcwZhZw-OZwiDZHDYROSlSA8QmAygrA0kecJQjkFQp0cNDNZwv5f5cwaVX3MIyQgjYhc7EpDw+Ii7Y7JQJIoFNxNIzg4-TI35EolI0QyWDItlLIvXXjdkBYOIgA7nN3MTPHf9anNvYw2I0wsndgywsLBHYPD3IfAjdgiSXQ4+MYgfAdFdJzQtFpaFVWWFeFTgJFHgVFNAabTFNHKtEmcmfYS4KfTLRoJoFlVYM43ArYEIS4P8Q6QiS4Eg0oaQa4sQa4Q8BQT+EKYsagdScUTvRPB0fRU4l3UGAAQlAOOIpkUDOM4iTgOJ0xKU0kUDa18xYSswuRAMY28C8h8lDXMNqkxOiz8xxOHHYPRwJMynRMIHONxyyx6LrUIBIk8jpNVhBJ9yazJKzhvEZKYL5x6zZNADYOEIGyaxGwZK62FNq1FKEPz0a1DSynEHai6QFNlK13lN0HkKI0yXDTKWiC8C0HVzxJnyNLaEdRfFmmoLrl2VuUtQCypzrS2RiUtJt2oI9JmhnCdIMKR0UEtSXyLFbHuFIDBEsQ6hnAKRAN7WriVIG04LhUjRjN3xzQCXjJwGYW5WT3NkjK6Xzgr24g3VcwKOTIGA0yo3KX0JAI9BpUrI4wBGoPLPtA0xvFUxdx3zwPnXsxbObNU1bkqg7JMHS27PsF7T7KaM3nSg-lVPVJQgbKiBiwQntFTLHNCE0BBHJj0zSQ5TUU3O3KXLvhCDrMInDRbJ3IDCrIDB-HqBXNVOyI+PDO3I0yMAAB4NznyyZAz9FjyxBmACJFBiIsRaBztSAagbJbDEEt5KhWiNp0hiJQAABqO42qb4UycMuSfYV85CmJEiXC17cwdCgkEELCn8m87I54oCkCogUQSiSCuw3WGC2I+CmJAi7+YizCwgbCxNEJFCx1RClCwireYmEisio8pfVscoSoAI25JZXEu7NpMYFwUoCGNclID6YRVYRc381OB2LovoHPV84SikfQFStEA4CgUMkiucqxaM5pYS9IJZPc9My8qSEy1yo8xyreHeBzNyn8XtCS-ubaGuNyMYFynMs2YyfMyfPSwUACo6eSmJMgRoLyUAINGRIoZOFyRhQKORFgL0fOdIi8uZEebNLS9sr0AIocr0ZImBFswcyqnINdZeN2EA5SqStS14KcoSTCWShuJKqIBSt7FNDq1SyywwOKy6FNCqnSm8qatMt1Iy3iu+SYUy8Qcyrqo8WgMMiM7KOy-Kdmby5yzlaKEPFajy5MH4BdJc681apaHykRPy183QQK38zKlIRyUKhScK060ASKlPaK-aqM3wBa2ZBKwiJK0iUgVKiUdKwq5iQyUtRnYKl6QeHKwqZhFsoqpM1TCaj6rYUGCqhqtsvs6ooqBqoaGq5qgm1eOm9csaiyzM-AMAGFFgdgLY7gFFPgXAEsw4kyMyGgdSIkqhY6UgQU0AgglvMWkiZSVSIWz09guW8yJwFSBYYvVQpKALAM-yA5ZhZWhWkWokVRQw-bQIW1ftR1CwftFKOqiwW1fNK28wfNW2oFW1U8p20AU812-kW1bBT27BH2ooW1JashR1UO6QD4O21ImfSUBgBYSQGoR1OOhOiCrYaO024iZ4p2540MDO21G0cmWYeoBgZJQusmYupgSYfOmfJCz2iwBE3QGoIwSKWGBiFCtOmuoLRieu8wRu0AZu6JBiFiTut2mfRiSAp2hiAIVuiwFiaeruowpJXQFIfuwe2ehiWJAe8wReoC4AXuhSV4gelutu0AMAUe32mfAAUgPrXpPtAAYivu3tAF3uIlOvrrvqHpcubrHqCyhM5Q-qPvXtPv-uih-svqCzfNvqAfvoYg-PMHAeDpnzfMil7s-o3tABQYQdfuhmgabtgdAFhmwd-qMOhlQZXoCHQdPrIeIYgaMKhIPofsCFnvMBhPMDOP5G6n1tMnlsBIshVI0yigmGAX7V0ANr4aNuPi4fyvEeFriloHqAACsfjVFhHdNBBol3aeHzJHUdakodISjZH+GqEDEsyZHtHDamMTbpVbUnYIVHU7GXYM7-lbVIBSBnY3Ak6V63GPGbpnGZkC75AK7YBIAnby6nAQn-HGlAmi6ABRT28J2JqJ0omfAAOUkFSYPvSdSfuu-mkdfC9osYkaY2qqEYCGAXIGiQXXIB-CMeWzfEDm4m4cFuKe23fCprKaAV00qdnoDJqdqaKeFqse6j5vsCMgFt4bkdVhlsguwQlvGYJH3wPGYBEhssUckCkG3lMhTzNtDDqbVo+PXE1vFvJsCAkjmaRM1X1M3iupkpipnAlpnMynufynfh4LqbikrOEuajqZKZeu+Y+DeYCQ+aawUeUaoBcRSI+F+baYnWiDjgBa2ABrzOBq6RaWzOZScBBFbDvJJ1RfXCEV6iqBeY3BGY+mIGTBxGUnyhuDUGbgwpBF0DBZ+KtQ+jZE4pBBpCUZZamspQ5O8nROZaoFyfvhiTfP5cYk0lwbO1FBBdDS5fBbGlShCGIjfKMcldVmlaKllepUIiFaVZShVYAG1BL-qlsOW+17N9Wg5+KSIAWUL2XRLwy-LrWjB+KABdYiGVkShlsi61xOFeCwFOl0fYYiZicNiNyNqN6Nnu05wpulisBl3C4iAAHXC1wsdYZYVZ5f4rTabVGdAApZ9CsFzVpbNkTZIolrLZ2erfpcrb1vyoJFUH3lrfzmIgAFlGIw4HBSBm3KAEKmn8q95KA+2TI6W23O3u2hoB2UTQBxRTJ1IcROr8a+lG3e3SZ84i2cQS2Akm2W34UU8Cba5s8yFFJ12kgrUAhg3E6gLw24ZsR-qMRVJCQNp7pY2YlFUB5doh5LRr3Q2Y2APAPY3bs92fhW3c302ULQPk283aaLBuHaAQQyp85Spkwz2+24PvD8qbFBFootKwFmMCsgJARaWkPshMOmF8qElnF85vFehqOdEcODE8qCnSOypVT84nmLF8WZxEWPgmPdAGPxQ9ZurLQfDSY+3OP-hqQ2PsgxHWAyO2AHzUbC3KWBb8ph3R3a2mWJPSYKPQZ52+Gl3xrZOlPSrkS+JiJypJByAcon5jx73mAShWUNpiJizDPF3Nq81MXsWFGIgSWRmCBPMYkAAlMgRCrEES4ECKYlOdhdjEEoNEFm0ASd6ThQHtvt1IZLj6IFhEwGGofQxvJkivPLowEIArpsU8y13NS4OOQyeYD+Py2rn8ArkdZEggVL4xFyad5LxxjaPADrrttLlyUDrLggXL21SQAS+oAS8gDiXQW1YEkiG3EiQgDibqQbqd8pMbsAE1qb3QE1mbg74iOb47pb0AE1lbi74iNb3QCvd1h7x7oAA","output":"M-evaluate value: \n[\"a\", [\"b\", [\"c\", [\"d\", [\"e\", [\"f\", null]]]]]]"}]},{"tag":"EXERCISE","title":"Exercise 4.14","id":"#ex-4.14","child":[{"body":"\n    Eva Lu Ator and Louis Reasoner are each experimenting with the\n    metacircular evaluator.  Eva types in the definition of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":", and runs some test programs that use it.\n    They work fine.  Louis, in contrast, has installed the system version of\n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" as a primitive for the metacircular\n    evaluator.  When he tries it, things go terribly wrong.  Explain why\n    Louis's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"map"},{"body":" fails even though\n    Eva's works.\n    ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-1","count":1,"href":"/sicpjs/4.1.4#footnote-link-1","child":[{"body":"Any\n    function\n    defined in the underlying\n    JavaScript\n    can be used as a primitive for the metacircular evaluator.  The name of a\n    primitive installed in the evaluator need not be the same as the name of its\n    implementation in the underlying\n    JavaScript;\n    the names are the same here because the metacircular evaluator implements\n    JavaScript    \n    itself.\n    Thus, for example, we could put \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list(\"first\", head)"},{"body":" \n    or \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"list(\"square\", x => x * x)"},{"body":"\n    in the list of \n    ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"primitive_functions"},{"body":".\n      ","tag":"#text"}]},{"tag":"DISPLAYFOOTNOTE","id":"#footnote-2","count":2,"href":"/sicpjs/4.1.4#footnote-link-2","child":[{"body":"\n        JavaScript's ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply"},{"body":" method \n\texpects the function arguments in a ","tag":"#text"},{"tag":"EM","child":[{"body":"vector","tag":"#text"}]},{"body":". (Vectors\n\tare called \"arrays\" in JavaScript.)\n\tThus, the ","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"arglist"},{"body":" is transformed into \n        a\n\t\n\tvector—here using a while\n\tloop (see exercise ","tag":"#text"},{"tag":"REF","body":"4.7","href":"/sicpjs/4.1.2#ex-4.7"},{"body":"):\n\t","tag":"#text"},{"tag":"SNIPPET","latex":true,"eval":false,"body":"\nfunction apply_in_underlying_javascript(prim, arglist) {\n    const arg_vector = [];               // empty vector\n    let i = 0;\n    while (!is_null(arglist)) {\n        arg_vector[i] = head(arglist);   // store value at index $\\texttt{i}$\n        i = i + 1;\n        arglist = tail(arglist);\n    }\n    return prim.apply(prim, arg_vector); // $\\texttt{apply}$ is accessed via $\\texttt{prim}$\n}\n\t  "},{"body":"\n\tWe also made use of\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_in_underlying_javascript"},{"body":" in\n\tsection ","tag":"#text"},{"tag":"REF","body":"2.4.3","href":"/sicpjs/2.4.3"},{"body":"\n\tto declare the function\n\t","tag":"#text"},{"tag":"JAVASCRIPTINLINE","body":"apply_generic"},{"body":".\n      ","tag":"#text"}]}]